/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.cfg.form;

import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import som.gui.SGuiClientSessionCustom;
import som.mod.SModConsts;
import som.mod.cfg.db.SDbBranchWarehouse;

/**
 *
 * @author Sergio Flores, Edwin Carmona
 */
public class SFormBranchWarehouse extends sa.lib.gui.bean.SBeanForm {

    private SDbBranchWarehouse moRegistry;

    /**
     * Creates new form SFormCompany
     */
    public SFormBranchWarehouse(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.CU_WAH, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jlBranch = new javax.swing.JLabel();
        moKeyBranch = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel4 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel5 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel11 = new javax.swing.JPanel();
        jlWarehouseType = new javax.swing.JLabel();
        moKeyWarehouseType = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel12 = new javax.swing.JPanel();
        jlProductionLine = new javax.swing.JLabel();
        moKeyProductionLine = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel8 = new javax.swing.JPanel();
        jlDimensionBase = new javax.swing.JLabel();
        moDecDimensionBase = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlDimensionBaseUnit = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jlDimensionHeight = new javax.swing.JLabel();
        moDecDimensionHeight = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlDimensionHeightUnit = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jlCapacityRealLiter = new javax.swing.JLabel();
        moDecCapacityRealLiter = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlCapacityRealLiterUnit = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jlNote = new javax.swing.JLabel();
        moTextNote = new sa.lib.gui.bean.SBeanFieldText();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setPreferredSize(new java.awt.Dimension(560, 350));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(9, 1, 0, 5));

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBranch.setForeground(new java.awt.Color(0, 0, 255));
        jlBranch.setText("Sucursal:*");
        jlBranch.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlBranch);

        moKeyBranch.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel7.add(moKeyBranch);

        jPanel2.add(jPanel7);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlCode);

        moTextCode.setText("sBeanFieldText1");
        jPanel4.add(moTextCode);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlName);

        moTextName.setText("sBeanFieldText1");
        moTextName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel5.add(moTextName);

        jPanel2.add(jPanel5);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlWarehouseType.setText("Tipo:*");
        jlWarehouseType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel11.add(jlWarehouseType);

        moKeyWarehouseType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel11.add(moKeyWarehouseType);

        jPanel2.add(jPanel11);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlProductionLine.setText("Línea de prod.:*");
        jlProductionLine.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlProductionLine);

        moKeyProductionLine.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel12.add(moKeyProductionLine);

        jPanel2.add(jPanel12);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDimensionBase.setText("Diámetro:");
        jlDimensionBase.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlDimensionBase);
        jPanel8.add(moDecDimensionBase);

        jlDimensionBaseUnit.setText("m");
        jlDimensionBaseUnit.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel8.add(jlDimensionBaseUnit);

        jPanel2.add(jPanel8);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDimensionHeight.setText("Altura:");
        jlDimensionHeight.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jlDimensionHeight);
        jPanel9.add(moDecDimensionHeight);

        jlDimensionHeightUnit.setText("m");
        jlDimensionHeightUnit.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel9.add(jlDimensionHeightUnit);

        jPanel2.add(jPanel9);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCapacityRealLiter.setText("Capacidad real:");
        jlCapacityRealLiter.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlCapacityRealLiter);
        jPanel10.add(moDecCapacityRealLiter);

        jlCapacityRealLiterUnit.setText("l");
        jlCapacityRealLiterUnit.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel10.add(jlCapacityRealLiterUnit);

        jPanel2.add(jPanel10);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlNote.setText("Nota:");
        jlNote.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlNote);

        moTextNote.setText("sBeanFieldText1");
        moTextNote.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel6.add(moTextNote);

        jPanel2.add(jPanel6);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jlBranch;
    private javax.swing.JLabel jlCapacityRealLiter;
    private javax.swing.JLabel jlCapacityRealLiterUnit;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlDimensionBase;
    private javax.swing.JLabel jlDimensionBaseUnit;
    private javax.swing.JLabel jlDimensionHeight;
    private javax.swing.JLabel jlDimensionHeightUnit;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlNote;
    private javax.swing.JLabel jlProductionLine;
    private javax.swing.JLabel jlWarehouseType;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecCapacityRealLiter;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecDimensionBase;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecDimensionHeight;
    private sa.lib.gui.bean.SBeanFieldKey moKeyBranch;
    private sa.lib.gui.bean.SBeanFieldKey moKeyProductionLine;
    private sa.lib.gui.bean.SBeanFieldKey moKeyWarehouseType;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    private sa.lib.gui.bean.SBeanFieldText moTextNote;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 560, 350);

        moKeyBranch.setKeySettings(miClient, SGuiUtils.getLabelName(jlBranch.getText()), true);
        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode.getText()), 5);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName.getText()), 50);
        moKeyWarehouseType.setKeySettings(miClient, SGuiUtils.getLabelName(jlWarehouseType.getText()), true);
        moKeyProductionLine.setKeySettings(miClient, SGuiUtils.getLabelName(jlProductionLine.getText()), true);
        moDecDimensionBase.setDecimalSettings(SGuiUtils.getLabelName(jlDimensionBase.getText()), SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moDecDimensionHeight.setDecimalSettings(SGuiUtils.getLabelName(jlDimensionHeight.getText()), SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moDecCapacityRealLiter.setDecimalSettings(SGuiUtils.getLabelName(jlCapacityRealLiter.getText()), SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moTextNote.setTextSettings(SGuiUtils.getLabelName(jlNote.getText()), 250, 0);

        moFields.addField(moKeyBranch);
        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moKeyWarehouseType);
        moFields.addField(moKeyProductionLine);
        moFields.addField(moDecDimensionBase);
        moFields.addField(moDecDimensionHeight);
        moFields.addField(moDecCapacityRealLiter);
        moFields.addField(moTextNote);

        moFields.setFormButton(jbSave);
    }

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyBranch, SModConsts.CU_COB, SLibConsts.UNDEFINED, null);
        miClient.getSession().populateCatalogue(moKeyWarehouseType, SModConsts.CS_WAH_TP, SLibConsts.UNDEFINED, null);
        miClient.getSession().populateCatalogue(moKeyProductionLine, SModConsts.CU_PROD_LINES, SLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        int idCompany = SLibConsts.UNDEFINED;
        int idBranch = SLibConsts.UNDEFINED;

        moRegistry = (SDbBranchWarehouse) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            idCompany = ((SGuiClientSessionCustom) miClient.getSession().getSessionCustom()).getCompany().getPkCompanyId();
            idBranch = ((SGuiClientSessionCustom) miClient.getSession().getSessionCustom()).getCompany().getChildBranches().get(0).getPkBranchId();
        }
        else {
            idCompany = moRegistry.getPkCompanyId();
            idBranch = moRegistry.getPkBranchId();
        }
        
        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyBranch.setValue(new int[] { idCompany, idBranch });
        moTextName.setValue(moRegistry.getName());
        moTextCode.setValue(moRegistry.getCode());
        moDecDimensionBase.setValue(moRegistry.getDimensionBase());
        moDecDimensionHeight.setValue(moRegistry.getDimensionHeight());
        moDecCapacityRealLiter.setValue(moRegistry.getCapacityRealLiter());
        moKeyWarehouseType.setValue(new int[] { moRegistry.getFkWarehouseTypeId() });
        moKeyProductionLine.setValue(new int[] { moRegistry.getFkProductionLineId() });
        moTextNote.setValue(moRegistry.getNote());

        setFormEditable(true);

        jlBranch.setEnabled(false);
        moKeyBranch.setEnabled(false);

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbBranchWarehouse registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            moRegistry.setPkCompanyId(moKeyBranch.getValue()[0]);
            moRegistry.setPkBranchId(moKeyBranch.getValue()[1]);
        }

        registry.setName(moTextName.getValue());
        registry.setCode(moTextCode.getValue());
        registry.setDimensionBase(moDecDimensionBase.getValue());
        registry.setDimensionHeight(moDecDimensionHeight.getValue());
        registry.setCapacityRealLiter(moDecCapacityRealLiter.getValue());
        registry.setFkWarehouseTypeId(moKeyWarehouseType.getValue()[0]);
        registry.setFkProductionLineId(moKeyProductionLine.getValue()[0]);
        registry.setNote(moTextNote.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }
}