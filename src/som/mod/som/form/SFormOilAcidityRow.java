/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import sa.lib.SLibConsts;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import som.mod.SModConsts;
import som.mod.som.db.SDbOilAcidityEntry;

/**
 *
 * @author Edwin Carmona
 */
public class SFormOilAcidityRow extends sa.lib.gui.bean.SBeanForm {

    private SDbOilAcidityEntry moRegistry;

    /**
     * Creates new form SFormOilAcidityRow
     * @param client
     * @param title
     */
    public SFormOilAcidityRow(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.SU_OIL_ACI_ETY, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel19 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel20 = new javax.swing.JPanel();
        jlMinValue = new javax.swing.JLabel();
        moDecMinValue = new sa.lib.gui.bean.SBeanFieldDecimal();
        jPanel21 = new javax.swing.JPanel();
        jlMaxValue = new javax.swing.JLabel();
        moDecMaxValue = new sa.lib.gui.bean.SBeanFieldDecimal();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Renglón de acidez:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:");
        jlCode.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel18.add(jlCode);

        moTextCode.setText("sBeanFieldText2");
        jPanel18.add(moTextCode);

        jPanel1.add(jPanel18);

        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:");
        jlName.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel19.add(jlName);

        moTextName.setText("sBeanFieldText3");
        moTextName.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel19.add(moTextName);

        jPanel1.add(jPanel19);

        jPanel20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlMinValue.setText("Valor mínimo:");
        jlMinValue.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel20.add(jlMinValue);

        moDecMinValue.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel20.add(moDecMinValue);

        jPanel1.add(jPanel20);

        jPanel21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlMaxValue.setText("Valor máximo:");
        jlMaxValue.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel21.add(jlMaxValue);

        moDecMaxValue.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel21.add(moDecMaxValue);

        jPanel1.add(jPanel21);

        jPanel2.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlMaxValue;
    private javax.swing.JLabel jlMinValue;
    private javax.swing.JLabel jlName;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecMaxValue;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecMinValue;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode.getText()), 5, 1);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlCode.getText()), 50, 1);
        moDecMinValue.setDecimalSettings(SGuiUtils.getLabelName(jlMinValue.getText()), SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moDecMaxValue.setDecimalSettings(SGuiUtils.getLabelName(jlMaxValue.getText()), SGuiConsts.GUI_TYPE_DEC_QTY, false);

        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moDecMinValue);
        moFields.addField(moDecMaxValue);

        moFields.setFormButton(jbSave);
    }

    /*
     * Public methods
     */

    @Override
    public void reloadCatalogues() {
        
    }

    @Override
    @SuppressWarnings("unchecked")
    public void setValue(int type, Object value) {
         switch (type) {
            default:
        }
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbOilAcidityEntry) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());
        moDecMinValue.setValue(moRegistry.getValueMin());
        moDecMaxValue.setValue(moRegistry.getValueMax());
        
        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbOilAcidityEntry registry = moRegistry.clone();

        registry.setCode(moTextCode.getValue());
        registry.setName(moTextName.getValue());
        registry.setValueMin(moDecMinValue.getValue());
        registry.setValueMax(moDecMaxValue.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        if (validation.isValid()) {
            if (moDecMinValue.getValue() > moDecMaxValue.getValue()) {
                validation.setMessage("El valor mínimo no puede ser mayor que el valor máximo.");
                validation.setComponent(moDecMinValue.getComponent());
            }
        }

        return validation;
    }

    @Override
    public void addAllListeners() {
        
    }

    @Override
    public void removeAllListeners() {
        
    }
}
