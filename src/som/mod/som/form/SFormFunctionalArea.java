/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import som.mod.SModConsts;
import som.mod.som.db.SDbFunctionalArea;

/**
 *
 * @author Isabel Servín
 */
public class SFormFunctionalArea extends sa.lib.gui.bean.SBeanForm {

    private SDbFunctionalArea moRegistry;

    /**
     * Creates new form SFormOilAcidity
     * @param client
     * @param title
     */
    public SFormFunctionalArea(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.SU_FUNC_AREA, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel5 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel6 = new javax.swing.JPanel();
        jlFuncAreaTp = new javax.swing.JLabel();
        moTextFuncAreaTp = new sa.lib.gui.bean.SBeanFieldText();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jlMails = new javax.swing.JLabel();
        moTextMails = new sa.lib.gui.bean.SBeanFieldText();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jlUnit = new javax.swing.JLabel();
        moTextUnit = new sa.lib.gui.bean.SBeanFieldText();
        jPanel9 = new javax.swing.JPanel();
        jlConvFactor = new javax.swing.JLabel();
        moDecimalConvFactor = new sa.lib.gui.bean.SBeanFieldDecimal();
        jPanel10 = new javax.swing.JPanel();
        jlPlant = new javax.swing.JLabel();
        moIntPlant = new sa.lib.gui.bean.SBeanFieldInteger();
        jPanel11 = new javax.swing.JPanel();
        jlInpCt = new javax.swing.JLabel();
        moKeyInpCt = new sa.lib.gui.bean.SBeanFieldKey();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel4.add(jlCode);
        jPanel4.add(moTextCode);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel5.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel5.add(moTextName);

        jPanel2.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFuncAreaTp.setText("Tipo área funcional:*");
        jlFuncAreaTp.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel6.add(jlFuncAreaTp);
        jPanel6.add(moTextFuncAreaTp);

        jLabel2.setText("A=Administración; P=Planta; L=Laboratorio");
        jPanel6.add(jLabel2);

        jPanel2.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlMails.setText("Mails reporte inv.:*");
        jlMails.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel7.add(jlMails);

        moTextMails.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel7.add(moTextMails);

        jLabel1.setText("Separados por ';'");
        jPanel7.add(jLabel1);

        jPanel2.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUnit.setText("Unidad conversión:");
        jlUnit.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel8.add(jlUnit);
        jPanel8.add(moTextUnit);

        jPanel2.add(jPanel8);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlConvFactor.setText("Factor conversión(kg):");
        jlConvFactor.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel9.add(jlConvFactor);
        jPanel9.add(moDecimalConvFactor);

        jPanel2.add(jPanel9);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPlant.setText("Planta:");
        jlPlant.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel10.add(jlPlant);
        jPanel10.add(moIntPlant);

        jPanel2.add(jPanel10);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlInpCt.setText("Categoría de insumo:");
        jlInpCt.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel11.add(jlInpCt);

        moKeyInpCt.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel11.add(moKeyInpCt);

        jPanel2.add(jPanel11);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlConvFactor;
    private javax.swing.JLabel jlFuncAreaTp;
    private javax.swing.JLabel jlInpCt;
    private javax.swing.JLabel jlMails;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlPlant;
    private javax.swing.JLabel jlUnit;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecimalConvFactor;
    private sa.lib.gui.bean.SBeanFieldInteger moIntPlant;
    private sa.lib.gui.bean.SBeanFieldKey moKeyInpCt;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextFuncAreaTp;
    private sa.lib.gui.bean.SBeanFieldText moTextMails;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    private sa.lib.gui.bean.SBeanFieldText moTextUnit;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 560, 350);

        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode), 5);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName), 50);
        moTextFuncAreaTp.setTextSettings(SGuiUtils.getLabelName(jlFuncAreaTp), 1);
        moTextMails.setTextSettings(SGuiUtils.getLabelName(jlMails), 255);
        moTextUnit.setTextSettings(SGuiUtils.getLabelName(jlUnit), 50, 0);
        moDecimalConvFactor.setDecimalSettings(SGuiUtils.getLabelName(jlConvFactor), SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moIntPlant.setIntegerSettings(SGuiUtils.getLabelName(jlPlant), SGuiConsts.GUI_TYPE_INT, false);
        moKeyInpCt.setKeySettings(miClient, SGuiUtils.getLabelName(jlInpCt), false);
        
        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moTextFuncAreaTp);
        moFields.addField(moTextMails);
        moFields.addField(moTextUnit);
        moFields.addField(moDecimalConvFactor);
        moFields.addField(moIntPlant);

        moFields.setFormButton(jbSave);
    }

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyInpCt, SModConsts.SU_INP_CT, SLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbFunctionalArea) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextName.setValue(moRegistry.getName());
        moTextCode.setValue(moRegistry.getCode());
        moTextFuncAreaTp.setValue(moRegistry.getFunctionalAreaType());
        moTextMails.setValue(moRegistry.getStockReportMails());
        moTextUnit.setValue(moRegistry.getProcessingUnitName());
        moDecimalConvFactor.setValue(moRegistry.getProcessingKgFactor());
        moIntPlant.setValue(moRegistry.getPlant());
        moKeyInpCt.setValue(new int[] { moRegistry.getFkInputCategoryId_n() });
        
        setFormEditable(true);

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbFunctionalArea registry = moRegistry.clone();

        if (registry.isRegistryNew()) { }

        registry.setName(moTextName.getValue());
        registry.setCode(moTextCode.getValue());
        registry.setFunctionalAreaType(moTextFuncAreaTp.getValue());
        registry.setStockReportMails(moTextMails.getValue());
        registry.setProcessingUnitName(moTextUnit.getValue());
        registry.setProcessingKgFactor(moDecimalConvFactor.getValue());
        registry.setPlant(moIntPlant.getValue());
        if (moKeyInpCt.getSelectedIndex() > 0) {
            registry.setFkInputCategoryId_n(moKeyInpCt.getValue()[0]);
        }
        
        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }
}
