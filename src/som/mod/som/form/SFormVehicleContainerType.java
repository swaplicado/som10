/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import som.mod.SModConsts;
import som.mod.som.db.SDbVehicleContainerType;

/**
 *
 * @author Isabel Servín
 */
public class SFormVehicleContainerType extends sa.lib.gui.bean.SBeanForm {

    private SDbVehicleContainerType moRegistry;

    /**
     * Creates new form SFormInputClass
     * @param client
     * @param title
     */
    public SFormVehicleContainerType(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.SU_VEH_CONT_TYPE, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel5 = new javax.swing.JPanel();
        jlVehicleType = new javax.swing.JLabel();
        moTextVehicleType = new sa.lib.gui.bean.SBeanFieldText();
        jPanel6 = new javax.swing.JPanel();
        jlContainerType = new javax.swing.JLabel();
        moTextContainerType = new sa.lib.gui.bean.SBeanFieldText();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(3, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel4.add(jlCode);
        jPanel4.add(moTextCode);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlVehicleType.setText("Tipo de vehiculo:*");
        jlVehicleType.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel5.add(jlVehicleType);

        moTextVehicleType.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel5.add(moTextVehicleType);

        jPanel2.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlContainerType.setText("Tipo de contenedor:*");
        jlContainerType.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel6.add(jlContainerType);

        moTextContainerType.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel6.add(moTextContainerType);

        jPanel2.add(jPanel6);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlContainerType;
    private javax.swing.JLabel jlVehicleType;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextContainerType;
    private sa.lib.gui.bean.SBeanFieldText moTextVehicleType;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode.getText()), 5);
        moTextVehicleType.setTextSettings(SGuiUtils.getLabelName(jlVehicleType.getText()), 50);
        moTextContainerType.setTextSettings(SGuiUtils.getLabelName(jlContainerType.getText()), 50);

        moFields.addField(moTextCode);
        moFields.addField(moTextVehicleType);
        moFields.addField(moTextContainerType);

        moFields.setFormButton(jbSave);
    }

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbVehicleContainerType) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextCode.setValue(moRegistry.getCode());
        moTextVehicleType.setValue(moRegistry.getVehicleType());
        moTextContainerType.setValue(moRegistry.getContainerType());

        setFormEditable(true);

        if (moRegistry.isRegistryNew()) {

        }
        else {
            
        }

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbVehicleContainerType registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            
        }

        registry.setCode(moTextCode.getValue());
        registry.setVehicleType(moTextVehicleType.getValue());
        registry.setContainerType(moTextContainerType.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        
        return validation;
    }
}
