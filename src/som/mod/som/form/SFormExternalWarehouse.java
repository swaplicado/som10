/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JComboBox;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;
import som.mod.SModConsts;
import som.mod.ext.db.SExtUtils;
import som.mod.som.db.SDbExternalWarehouse;

/**
 *
 * @author Juan Barajas
 */
public class SFormExternalWarehouse extends SBeanForm implements ItemListener {

    private SDbExternalWarehouse moRegistry;

    /**
     * Creates new form SFormExternalWarehouse
     */
    public SFormExternalWarehouse(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.SU_EXT_WAH, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jlExternalWarehouse = new javax.swing.JLabel();
        moKeyExternalWarehouse = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel6 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel4 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlExternalWarehouse.setForeground(new java.awt.Color(0, 0, 255));
        jlExternalWarehouse.setText("Almacén sist. externo:*");
        jlExternalWarehouse.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel10.add(jlExternalWarehouse);

        moKeyExternalWarehouse.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel10.add(moKeyExternalWarehouse);

        jPanel2.add(jPanel10);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel6.add(jlCode);

        moTextCode.setEditable(false);
        moTextCode.setText("sBeanFieldText2");
        jPanel6.add(moTextCode);

        jPanel2.add(jPanel6);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel4.add(jlName);

        moTextName.setEditable(false);
        moTextName.setText("sBeanFieldText1");
        moTextName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel4.add(moTextName);

        jPanel2.add(jPanel4);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlExternalWarehouse;
    private javax.swing.JLabel jlName;
    private sa.lib.gui.bean.SBeanFieldKey moKeyExternalWarehouse;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        moKeyExternalWarehouse.setKeySettings(miClient, SGuiUtils.getLabelName(jlExternalWarehouse.getText()), true);
        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode.getText()), 10);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName.getText()), 50);

        moFields.addField(moKeyExternalWarehouse);
        moFields.addField(moTextCode);
        moFields.addField(moTextName);

        moFields.setFormButton(jbSave);
    }

    private void itemStateKeyExternalWarehouse() {
        if (moKeyExternalWarehouse.getSelectedIndex() <= 0) {
            moTextCode.setValue("");
            moTextName.setValue("");
        }
        else {
            moTextCode.setValue(moKeyExternalWarehouse.getSelectedItem().getCode());
            moTextName.setValue(moKeyExternalWarehouse.getSelectedItem().getItem());
        }
    }

    @Override
    public void addAllListeners() {
        moKeyExternalWarehouse.addItemListener(this);
    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    @SuppressWarnings("unchecked")
    public void reloadCatalogues() {
        SExtUtils.populateCataloguesWarehouses(miClient, moKeyExternalWarehouse);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbExternalWarehouse) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyExternalWarehouse.setValue(new int[] { moRegistry.getFkExternalCobId_n(), moRegistry.getFkExternalEntId_n() });
        moTextName.setValue(moRegistry.getName());
        moTextCode.setValue(moRegistry.getCode());

        moTextCode.setEnabled(false);
        moTextName.setEnabled(false);

        setFormEditable(true);

        if (moRegistry.isRegistryNew()) {

        }
        else {
            moKeyExternalWarehouse.setEnabled(false);
        }

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbExternalWarehouse registry =  moRegistry.clone();

        if (registry.isRegistryNew()) {}

        registry.setName(moTextName.getValue());
        registry.setCode(moTextCode.getValue());
        registry.setFkExternalCobId_n(moKeyExternalWarehouse.getValue()[0]);
        registry.setFkExternalEntId_n(moKeyExternalWarehouse.getValue()[1]);

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() instanceof JComboBox && e.getStateChange() == ItemEvent.SELECTED) {
            JComboBox comboBox = (JComboBox)  e.getSource();

            if (comboBox == moKeyExternalWarehouse) {
                itemStateKeyExternalWarehouse();
            }
        }
    }
}
