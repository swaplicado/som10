/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import som.mod.SModConsts;
import som.mod.som.db.SDbGrindingParameter;

/**
 *
 * @author Edwin Carmona
 */
public class SFormGrindingParameters extends sa.lib.gui.bean.SBeanForm implements ItemListener {

    private SDbGrindingParameter moRegistry;

    /**
     * Creates new form SFormCompany
     */
    public SFormGrindingParameters(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.SU_GRINDING_PARAM, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel5 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel6 = new javax.swing.JPanel();
        jlDetails = new javax.swing.JLabel();
        moTextDetails = new sa.lib.gui.bean.SBeanFieldText();
        jPanel36 = new javax.swing.JPanel();
        jlIsText = new javax.swing.JLabel();
        moBIsText = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel7 = new javax.swing.JPanel();
        jlDetails1 = new javax.swing.JLabel();
        moDefaultTextValue = new sa.lib.gui.bean.SBeanFieldText();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(9, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("CÃ³digo:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlCode);
        jPanel4.add(moTextCode);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel5.add(moTextName);

        jPanel2.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDetails.setText("Detalles:");
        jlDetails.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlDetails);

        moTextDetails.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel6.add(moTextDetails);

        jPanel2.add(jPanel6);

        jPanel36.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlIsText.setText("Es texto:");
        jlIsText.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel36.add(jlIsText);

        moBIsText.setPreferredSize(new java.awt.Dimension(300, 23));
        moBIsText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                moBIsTextItemStateChanged(evt);
            }
        });
        jPanel36.add(moBIsText);

        jPanel2.add(jPanel36);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDetails1.setText("Valor por defecto:");
        jlDetails1.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlDetails1);

        moDefaultTextValue.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel7.add(moDefaultTextValue);

        jPanel2.add(jPanel7);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void moBIsTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_moBIsTextItemStateChanged
        this.onIsTextChange();
    }//GEN-LAST:event_moBIsTextItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlDetails;
    private javax.swing.JLabel jlDetails1;
    private javax.swing.JLabel jlIsText;
    private javax.swing.JLabel jlName;
    private sa.lib.gui.bean.SBeanFieldBoolean moBIsText;
    private sa.lib.gui.bean.SBeanFieldText moDefaultTextValue;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextDetails;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode.getText()), 5);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName.getText()), 50);
        moTextDetails.setTextSettings(SGuiUtils.getLabelName(jlDetails.getText()), 150);

        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moTextDetails);

        moFields.setFormButton(jbSave);
        
        moBIsText.addItemListener(this);
    }
    
    private void onIsTextChange() {
        moDefaultTextValue.setEnabled(moBIsText.getValue());
        moDefaultTextValue.setValue("");
    }

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbGrindingParameter) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();
        
        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextName.setValue(moRegistry.getName());
        moTextCode.setValue(moRegistry.getCode());
        moTextDetails.setValue(moRegistry.getDetails());
        moDefaultTextValue.setValue(moRegistry.getDefaultTextValue());
        moBIsText.setValue(moRegistry.isText());

        setFormEditable(true);

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbGrindingParameter registry = moRegistry.clone();

        registry.setName(moTextName.getValue());
        registry.setCode(moTextCode.getValue());
        registry.setDetails(moTextDetails.getValue());
        registry.setIsText(moBIsText.getValue());
        registry.setDefaultTextValue(moBIsText.getValue() ? moDefaultTextValue.getValue() : "");

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }

    @Override
    public void itemStateChanged(ItemEvent e) { }
}
