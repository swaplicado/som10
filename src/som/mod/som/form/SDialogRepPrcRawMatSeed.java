/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import javax.swing.JRadioButton;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import sa.lib.SLibConsts;
import sa.lib.SLibTimeUtils;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanDialogReport;
import som.gui.prt.SPrtUtils;
import som.mod.SModConsts;

/**
 *
 * @author Isabel Servín
 * 
 */
public class SDialogRepPrcRawMatSeed extends SBeanDialogReport implements ChangeListener {

    /**
     * Creates new form SDialogRepPrcRarMatSeed
     * @param client
     * @param title
     */
    public SDialogRepPrcRawMatSeed(SGuiClient client, String title) {
        setFormSettings(client, SModConsts.SR_PRC_RAW_MAT_SEED, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }
    
    private void actionRadPeriodByYearMonth() {
        moCalendarMonth.setEnabled(moRadPeriodByYearMonth.isSelected());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPeriod = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlPeriod = new javax.swing.JLabel();
        moRadPeriodByYear = new sa.lib.gui.bean.SBeanFieldRadio();
        moRadPeriodByYearMonth = new sa.lib.gui.bean.SBeanFieldRadio();
        jPanel11 = new javax.swing.JPanel();
        jlYear = new javax.swing.JLabel();
        moCalendarYear = new sa.lib.gui.bean.SBeanFieldCalendarYear();
        jPanel12 = new javax.swing.JPanel();
        jlMonth = new javax.swing.JLabel();
        moCalendarMonth = new sa.lib.gui.bean.SBeanFieldCalendarMonth();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros del reporte:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(3, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPeriod.setText("Periodo:");
        jlPeriod.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlPeriod);

        bgPeriod.add(moRadPeriodByYear);
        moRadPeriodByYear.setText("Por año");
        moRadPeriodByYear.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel3.add(moRadPeriodByYear);

        bgPeriod.add(moRadPeriodByYearMonth);
        moRadPeriodByYearMonth.setText("Por año y mes");
        moRadPeriodByYearMonth.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel3.add(moRadPeriodByYearMonth);

        jPanel2.add(jPanel3);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlYear.setText("Año:*");
        jlYear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel11.add(jlYear);
        jPanel11.add(moCalendarYear);

        jPanel2.add(jPanel11);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlMonth.setText("Mes:");
        jlMonth.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlMonth);

        moCalendarMonth.setEnabled(false);
        moCalendarMonth.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel12.add(moCalendarMonth);

        jPanel2.add(jPanel12);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgPeriod;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jlMonth;
    private javax.swing.JLabel jlPeriod;
    private javax.swing.JLabel jlYear;
    private sa.lib.gui.bean.SBeanFieldCalendarMonth moCalendarMonth;
    private sa.lib.gui.bean.SBeanFieldCalendarYear moCalendarYear;
    private sa.lib.gui.bean.SBeanFieldRadio moRadPeriodByYear;
    private sa.lib.gui.bean.SBeanFieldRadio moRadPeriodByYearMonth;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        moRadPeriodByYear.setBooleanSettings(moRadPeriodByYear.getText(), true);
        moRadPeriodByYearMonth.setBooleanSettings(moRadPeriodByYearMonth.getText(), false);
        moCalendarYear.setCalendarSettings(jlYear.getText());
        moCalendarMonth.setCalendarSettings(jlMonth.getText());
        
        moFields.addField(moRadPeriodByYear);
        moFields.addField(moRadPeriodByYearMonth);
        moFields.addField(moCalendarYear);
        moFields.addField(moCalendarMonth);
        
        moFields.setFormButton(jbPrint);
        
        moCalendarYear.setValue(SLibTimeUtils.digestYear(miClient.getSession().getWorkingDate())[0]);
        moCalendarMonth.setValue(SLibTimeUtils.digestMonth(miClient.getSession().getWorkingDate())[1]);
        
        moRadPeriodByYear.setSelected(true);
        
        moRadPeriodByYearMonth.addChangeListener(this);
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        return validation;
    }

    @Override
    public void createParamsMap() {
        String sqlWhere = "";
        
        moParamsMap = SPrtUtils.createReportParamsMap(miClient.getSession());
        sqlWhere += "WHERE YEAR(s.dt) = " + moCalendarYear.getValue() + " ";
        sqlWhere += moRadPeriodByYearMonth.isSelected() ? "AND MONTH(s.dt) = " + moCalendarMonth.getValue() + " " : "";
        
        moParamsMap.put("nYear", moCalendarYear.getValue());
        moParamsMap.put("nMonth", moRadPeriodByYearMonth.isSelected() ? moCalendarMonth.getValue() : 0);
        moParamsMap.put("sSqlWhere", sqlWhere);
    }

    @Override
    public void stateChanged(ChangeEvent e) {
        if (e.getSource() instanceof JRadioButton) {
            JRadioButton button = (JRadioButton) e.getSource();
            
            if (button == moRadPeriodByYearMonth) {
                actionRadPeriodByYearMonth();
            }
        }
    }
}
