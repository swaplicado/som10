/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import java.util.Date;
import sa.lib.SLibConsts;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanFormDialog;
import som.mod.SModConsts;

/**
 *
 * @author Néstor Ávalos, Sergio Flores
 */
public class SDialogMailReceptions extends SBeanFormDialog {

    /**
     * Creates new form SDialogMailReceptions
     */
    public SDialogMailReceptions(SGuiClient client, int formSubtype, String title) {
        setFormSettings(client, SModConsts.SX_DAY_MAIL, formSubtype, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        moRadByDate = new sa.lib.gui.bean.SBeanFieldRadio();
        moRadByPeriod = new sa.lib.gui.bean.SBeanFieldRadio();
        jPanel11 = new javax.swing.JPanel();
        jlDateStart = new javax.swing.JLabel();
        moDateStart = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel12 = new javax.swing.JPanel();
        jlDateEnd = new javax.swing.JLabel();
        moDateEnd = new sa.lib.gui.bean.SBeanFieldDate();

        setTitle("Recepciones del día o período");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(6, 1, 0, 5));

        buttonGroup.add(moRadByDate);
        moRadByDate.setText("Por día");
        moRadByDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moRadByDateActionPerformed(evt);
            }
        });
        jPanel2.add(moRadByDate);

        buttonGroup.add(moRadByPeriod);
        moRadByPeriod.setText("Por período");
        moRadByPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moRadByPeriodActionPerformed(evt);
            }
        });
        jPanel2.add(moRadByPeriod);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateStart.setText("Fecha inicial:*");
        jlDateStart.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel11.add(jlDateStart);
        jPanel11.add(moDateStart);

        jPanel2.add(jPanel11);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateEnd.setText("Fecha final:*");
        jlDateEnd.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlDateEnd);
        jPanel12.add(moDateEnd);

        jPanel2.add(jPanel12);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void moRadByDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moRadByDateActionPerformed
        changeRadioButton();
    }//GEN-LAST:event_moRadByDateActionPerformed

    private void moRadByPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moRadByPeriodActionPerformed
        changeRadioButton();
    }//GEN-LAST:event_moRadByPeriodActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jlDateEnd;
    private javax.swing.JLabel jlDateStart;
    private sa.lib.gui.bean.SBeanFieldDate moDateEnd;
    private sa.lib.gui.bean.SBeanFieldDate moDateStart;
    private sa.lib.gui.bean.SBeanFieldRadio moRadByDate;
    private sa.lib.gui.bean.SBeanFieldRadio moRadByPeriod;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 400, 250);

        jbSave.setText("Aceptar");

        moRadByDate.setBooleanSettings(moRadByDate.getText(), true);
        moRadByPeriod.setBooleanSettings(moRadByPeriod.getText(), false);
        moDateStart.setDateSettings(miClient, SGuiUtils.getLabelName(jlDateStart.getText()), true);
        moDateEnd.setDateSettings(miClient, SGuiUtils.getLabelName(jlDateEnd.getText()), true);

        moFields.addField(moRadByDate);
        moFields.addField(moRadByPeriod);
        moFields.addField(moDateStart);
        moFields.addField(moDateEnd);

        moFields.setFormButton(jbSave);

        reloadCatalogues();
        addAllListeners();
    }

    /*
     * Private methods
     */

    private void changeRadioButton() {
        if (moRadByDate.isSelected()) {
            moDateEnd.setEnabled(false);
            moDateEnd.setValue(moDateStart.getValue());
        }
        else {
            moDateEnd.setEnabled(true);
        }
    }

    /*
     * Public methods
     */

    public Date getDateStart() { return moDateStart.getValue(); }

    public Date getDateEnd() { return moRadByDate.isSelected() ? moDateStart.getValue() : moDateEnd.getValue(); }

    public void setFormReset() {
        moDateStart.setValue(miClient.getSession().getWorkingDate());
        moDateEnd.setValue(miClient.getSession().getWorkingDate());

        moRadByDate.setSelected(true);
        moDateEnd.setEnabled(false);
    }

    public void reloadCatalogues() {

    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        if (validation.isValid()) {
            if (moRadByPeriod.isSelected()) {
                validation = SGuiUtils.validateDateRange(moDateStart, moDateEnd);
            }
        }

        return validation;
    }

    @Override
    public void addAllListeners() {
        
    }

    @Override
    public void removeAllListeners() {
        
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {

    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
