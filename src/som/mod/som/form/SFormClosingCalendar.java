/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import som.mod.SModConsts;
import som.mod.som.db.SDbClosingCalendar;

/**
 *
 * @author Isabel Servín
 */
public class SFormClosingCalendar extends sa.lib.gui.bean.SBeanForm {

    private SDbClosingCalendar moRegistry;

    /**
     * Creates new form SFormInputClass
     * @param client
     * @param title
     */
    public SFormClosingCalendar(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.SU_CLOSING_CAL, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlYear = new javax.swing.JLabel();
        moIntYear = new sa.lib.gui.bean.SBeanFieldInteger();
        jPanel5 = new javax.swing.JPanel();
        jlMonth = new javax.swing.JLabel();
        moIntMonth = new sa.lib.gui.bean.SBeanFieldInteger();
        jPanel6 = new javax.swing.JPanel();
        jlClosingDate = new javax.swing.JLabel();
        moDateClosingDate = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel7 = new javax.swing.JPanel();
        jlInputTp = new javax.swing.JLabel();
        moKeyInputTp = new sa.lib.gui.bean.SBeanFieldKey();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlYear.setText("Año:*");
        jlYear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlYear);
        jPanel4.add(moIntYear);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlMonth.setText("Mes:*");
        jlMonth.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlMonth);
        jPanel5.add(moIntMonth);

        jPanel2.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlClosingDate.setText("Fecha de cierre*:");
        jlClosingDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlClosingDate);
        jPanel6.add(moDateClosingDate);

        jPanel2.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlInputTp.setText("Tipo de insumo*:");
        jlInputTp.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlInputTp);

        moKeyInputTp.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel7.add(moKeyInputTp);

        jPanel2.add(jPanel7);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel jlClosingDate;
    private javax.swing.JLabel jlInputTp;
    private javax.swing.JLabel jlMonth;
    private javax.swing.JLabel jlYear;
    private sa.lib.gui.bean.SBeanFieldDate moDateClosingDate;
    private sa.lib.gui.bean.SBeanFieldInteger moIntMonth;
    private sa.lib.gui.bean.SBeanFieldInteger moIntYear;
    private sa.lib.gui.bean.SBeanFieldKey moKeyInputTp;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        moIntYear.setIntegerSettings(SGuiUtils.getLabelName(jlYear.getText()), SGuiConsts.GUI_TYPE_INT_CAL_YEAR, true);
        moIntYear.setMinInteger(2000);
        moIntYear.setMaxInteger(2100);
        moIntMonth.setIntegerSettings(SGuiUtils.getLabelName(jlMonth.getText()), SGuiConsts.GUI_TYPE_INT_CAL_MONTH, true);
        moIntMonth.setMinInteger(1);
        moIntMonth.setMaxInteger(12);
        moDateClosingDate.setDateSettings(miClient, SGuiUtils.getLabelName(jlClosingDate), true);
        moKeyInputTp.setKeySettings(miClient, SGuiUtils.getLabelName(jlInputTp), true);

        moFields.addField(moIntYear);
        moFields.addField(moIntMonth);
        moFields.addField(moDateClosingDate);
        moFields.addField(moKeyInputTp);

        moFields.setFormButton(jbSave);
    }

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyInputTp, SModConsts.SU_INP_TP, SLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbClosingCalendar) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
            moDateClosingDate.setValue(miClient.getSession().getSystemDate());
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moIntYear.setValue(moRegistry.getCalendarYear());
        moIntMonth.setValue(moRegistry.getCalendarMonth());
        moDateClosingDate.setValue(moRegistry.getClosingDate());
        moKeyInputTp.setValue(new int[] { moRegistry.getFkInputCategoryId(), moRegistry.getFkInputClassId(), moRegistry.getFkInputTypeId() });
        
        setFormEditable(true);

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbClosingCalendar registry = moRegistry.clone();

        if (registry.isRegistryNew()) { }

        registry.setCalendarYear(moIntYear.getValue());
        registry.setCalendarMonth(moIntMonth.getValue());
        registry.setClosingDate(moDateClosingDate.getValue());
        
        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }
}
