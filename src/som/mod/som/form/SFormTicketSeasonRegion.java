/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiFieldKeyGroup;
import sa.lib.gui.SGuiParams;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;
import som.mod.SModConsts;
import som.mod.som.db.SDbTicket;

/**
 *
 * @author Juan Barajas
 */
public class SFormTicketSeasonRegion extends SBeanForm {

    private SDbTicket moRegistry;
    private SGuiFieldKeyGroup moFieldKeyGroup;

    /**
     * Creates new form SFormScaleTicketRegion
     */
    public SFormTicketSeasonRegion(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.SX_TIC_MAN, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jlScale = new javax.swing.JLabel();
        moTextScaleName = new sa.lib.gui.bean.SBeanFieldText();
        moTextScaleCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel4 = new javax.swing.JPanel();
        jlTicket = new javax.swing.JLabel();
        moTextTicket = new sa.lib.gui.bean.SBeanFieldInteger();
        jPanel10 = new javax.swing.JPanel();
        jlProducer = new javax.swing.JLabel();
        moTextProducer = new sa.lib.gui.bean.SBeanFieldText();
        jPanel12 = new javax.swing.JPanel();
        jlItem = new javax.swing.JLabel();
        moTextItem = new sa.lib.gui.bean.SBeanFieldText();
        jPanel8 = new javax.swing.JPanel();
        jlSeason = new javax.swing.JLabel();
        moKeySeason = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel15 = new javax.swing.JPanel();
        jlRegion = new javax.swing.JLabel();
        moKeyRegion = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jlPlates = new javax.swing.JLabel();
        moTextPlates = new sa.lib.gui.bean.SBeanFieldText();
        jPanel7 = new javax.swing.JPanel();
        jlPlatesCage = new javax.swing.JLabel();
        moTextPlatesCage = new sa.lib.gui.bean.SBeanFieldText();
        jPanel9 = new javax.swing.JPanel();
        jlDriver = new javax.swing.JLabel();
        moTextDriver = new sa.lib.gui.bean.SBeanFieldText();
        jPanel11 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(6, 1, 0, 5));

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlScale.setText("Báscula:");
        jlScale.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel13.add(jlScale);

        moTextScaleName.setEditable(false);
        moTextScaleName.setText("sBeanFieldText2");
        moTextScaleName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel13.add(moTextScaleName);

        moTextScaleCode.setEditable(false);
        moTextScaleCode.setText("sBeanFieldText1");
        moTextScaleCode.setPreferredSize(new java.awt.Dimension(45, 23));
        jPanel13.add(moTextScaleCode);

        jPanel1.add(jPanel13);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTicket.setText("Boleto:");
        jlTicket.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlTicket);

        moTextTicket.setEditable(false);
        jPanel4.add(moTextTicket);

        jPanel1.add(jPanel4);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlProducer.setText("Proveedor:");
        jlProducer.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlProducer);

        moTextProducer.setEditable(false);
        moTextProducer.setText("sBeanFieldText2");
        moTextProducer.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel10.add(moTextProducer);

        jPanel1.add(jPanel10);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItem.setText("Ítem:");
        jlItem.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlItem);

        moTextItem.setEditable(false);
        moTextItem.setText("sBeanFieldText2");
        moTextItem.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel12.add(moTextItem);

        jPanel1.add(jPanel12);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlSeason.setText("Temporada:");
        jlSeason.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlSeason);

        moKeySeason.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel8.add(moKeySeason);

        jPanel1.add(jPanel8);

        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlRegion.setText("Región:");
        jlRegion.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel15.add(jlRegion);

        moKeyRegion.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel15.add(moKeyRegion);

        jPanel1.add(jPanel15);

        jPanel3.add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel5.setLayout(new java.awt.GridLayout(6, 1, 0, 5));

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPlates.setText("Placas:");
        jlPlates.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlPlates);

        moTextPlates.setEditable(false);
        moTextPlates.setText("sBeanFieldText2");
        jPanel6.add(moTextPlates);

        jPanel5.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPlatesCage.setText("Placas caja:");
        jlPlatesCage.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlPlatesCage);

        moTextPlatesCage.setEditable(false);
        moTextPlatesCage.setText("sBeanFieldText2");
        jPanel7.add(moTextPlatesCage);

        jPanel5.add(jPanel7);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDriver.setText("Chofer:");
        jlDriver.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jlDriver);

        moTextDriver.setEditable(false);
        moTextDriver.setText("sBeanFieldText2");
        moTextDriver.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel9.add(moTextDriver);

        jPanel5.add(jPanel9);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel5.add(jPanel11);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel5.add(jPanel14);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jlDriver;
    private javax.swing.JLabel jlItem;
    private javax.swing.JLabel jlPlates;
    private javax.swing.JLabel jlPlatesCage;
    private javax.swing.JLabel jlProducer;
    private javax.swing.JLabel jlRegion;
    private javax.swing.JLabel jlScale;
    private javax.swing.JLabel jlSeason;
    private javax.swing.JLabel jlTicket;
    private sa.lib.gui.bean.SBeanFieldKey moKeyRegion;
    private sa.lib.gui.bean.SBeanFieldKey moKeySeason;
    private sa.lib.gui.bean.SBeanFieldText moTextDriver;
    private sa.lib.gui.bean.SBeanFieldText moTextItem;
    private sa.lib.gui.bean.SBeanFieldText moTextPlates;
    private sa.lib.gui.bean.SBeanFieldText moTextPlatesCage;
    private sa.lib.gui.bean.SBeanFieldText moTextProducer;
    private sa.lib.gui.bean.SBeanFieldText moTextScaleCode;
    private sa.lib.gui.bean.SBeanFieldText moTextScaleName;
    private sa.lib.gui.bean.SBeanFieldInteger moTextTicket;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 720, 450);

        moFieldKeyGroup = new SGuiFieldKeyGroup(miClient);

        moTextScaleName.setTextSettings(SGuiUtils.getLabelName(jlScale.getText()), 25);
        moTextScaleCode.setTextSettings(SGuiUtils.getLabelName(jlScale.getText()), 25);
        moTextTicket.setIntegerSettings(SGuiUtils.getLabelName(jlTicket.getText()), SGuiConsts.GUI_TYPE_INT_RAW, true);
        moTextProducer.setTextSettings(SGuiUtils.getLabelName(jlProducer.getText()), 25);
        moTextItem.setTextSettings(SGuiUtils.getLabelName(jlItem.getText()), 25);
        moKeySeason.setKeySettings(miClient, SGuiUtils.getLabelName(jlSeason.getText()), true);
        moKeyRegion.setKeySettings(miClient, SGuiUtils.getLabelName(jlRegion.getText()), true);
        moTextPlates.setTextSettings(SGuiUtils.getLabelName(jlPlates.getText()), 25);
        moTextPlatesCage.setTextSettings(SGuiUtils.getLabelName(jlPlatesCage.getText()), 25);
        moTextDriver.setTextSettings(SGuiUtils.getLabelName(jlDriver.getText()), 150);

        moFields.addField(moTextScaleName);
        moFields.addField(moTextScaleCode);
        moFields.addField(moTextTicket);
        moFields.addField(moTextProducer);
        moFields.addField(moTextItem);
        moFields.addField(moKeySeason);
        moFields.addField(moKeyRegion);
        moFields.addField(moTextPlates);
        moFields.addField(moTextPlatesCage);
        moFields.addField(moTextDriver);

        moFields.setFormButton(jbSave);

        /* XXX Cell renderers not implemented yet in XML
        mvFormGrids.add(moGridUserRights);
        mvFormGrids.add(moGridUserScales);
        */
    }

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        SGuiParams params = new SGuiParams();

        params.getParamsMap().put(SModConsts.SU_ITEM, moRegistry.getFkItemId());
        params.getParamsMap().put(SModConsts.SU_PROD, moRegistry.getFkProducerId());
        params.getParamsMap().put(SGuiConsts.PARAM_DATE, moRegistry.getDate());

        moFieldKeyGroup.initGroup();
        moFieldKeyGroup.addFieldKey(moKeySeason, SModConsts.SX_TIC_SEAS, SLibConsts.UNDEFINED, params);
        moFieldKeyGroup.addFieldKey(moKeyRegion, SModConsts.SX_TIC_REG, SLibConsts.UNDEFINED, params);
        moFieldKeyGroup.populateCatalogues();
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbTicket) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextScaleName.setValue(moRegistry.getXtaScaleName());
        moTextScaleCode.setValue(moRegistry.getXtaScaleCode());
        moTextTicket.setValue(moRegistry.getNumber());
        moTextProducer.setValue(moRegistry.getXtaProducer());
        moTextItem.setValue(moRegistry.getXtaItem());
        moKeySeason.setValue(new int[] { moRegistry.getFkSeasonId_n(), moRegistry.getFkItemId(), moRegistry.getFkProducerId() });
        moKeyRegion.setValue(new int[] { moRegistry.getFkSeasonId_n(), moRegistry.getFkRegionId_n(), moRegistry.getFkItemId(), moRegistry.getFkProducerId() });
        moTextPlates.setValue(moRegistry.getPlate());
        moTextPlatesCage.setValue(moRegistry.getPlateCage());
        moTextDriver.setValue(moRegistry.getDriver());

        setFormEditable(true);

        moTextScaleName.setEditable(false);
        moTextScaleCode.setEditable(false);
        moTextTicket.setEditable(false);
        moTextProducer.setEditable(false);
        moTextItem.setEditable(false);
        moKeyRegion.setEnabled( moRegistry.getFkSeasonId_n() != SLibConsts.UNDEFINED);
        moTextPlates.setEditable(false);
        moTextPlatesCage.setEditable(false);
        moTextDriver.setEditable(false);

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbTicket registry = moRegistry.clone();

        if (registry.isRegistryNew()) { }

        registry.setXtaScaleName(moTextScaleName.getValue());
        registry.setXtaScaleCode(moTextScaleCode.getValue());
        registry.setXtaProducer(moTextProducer.getValue());
        registry.setXtaSeason(moKeySeason.getSelectedItem().getItem());
        registry.setXtaRegion(moKeyRegion.getSelectedItem().getItem());
        registry.setXtaItem(moTextItem.getValue());
        registry.setRowEdited(true);
        registry.setAuxRequiredCalculation(true);

        registry.setFkSeasonId_n(moKeyRegion.getValue()[0]);
        registry.setFkRegionId_n(moKeyRegion.getValue()[1]);

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }
}
