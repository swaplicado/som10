/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package som.mod.som.form;

import erp.lib.SLibUtilities;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiFieldKeyGroup;
import sa.lib.gui.SGuiParams;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;
import som.gui.SGuiClientSessionCustom;
import som.mod.SModConsts;
import som.mod.SModSysConsts;
import som.mod.ext.db.SExtUtils;
import som.mod.som.db.SDbItem;
import som.mod.som.db.SSomConsts;
import som.mod.som.db.SSomUtils;

/**
 *
 * @author Juan Barajas, Sergio Flores, Alfredo Pérez
 * 2018-12-11, Sergio Flores: Adición de parámetros de fruta.
 */
public class SFormItem extends SBeanForm implements ItemListener {

    private SDbItem moRegistry;
    private SGuiFieldKeyGroup moFieldKeyGroup;

    private ArrayList<String> msAutoMailNotificationBoxes;
    private ArrayList<String> msUserMailNotificationBoxes;

    /**
     * Creates new form SFormItem
     */
    public SFormItem(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.SU_ITEM, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jlExternalItem = new javax.swing.JLabel();
        moKeyExternalItem = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel6 = new javax.swing.JPanel();
        jlExternalCode = new javax.swing.JLabel();
        moTextExternalCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel3 = new javax.swing.JPanel();
        jlExternalName = new javax.swing.JLabel();
        moTextExternalName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel12 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel13 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel43 = new javax.swing.JPanel();
        jlNameShort = new javax.swing.JLabel();
        moTextNameShort = new sa.lib.gui.bean.SBeanFieldText();
        jLabel7 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jlUnit = new javax.swing.JLabel();
        moKeyUnit = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel28 = new javax.swing.JPanel();
        jlUnitaryWeight = new javax.swing.JLabel();
        moDecUnitaryWeight = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlUnitaryWeightUnit = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jlDensity = new javax.swing.JLabel();
        moDecDensity = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlDensityUnit = new javax.swing.JLabel();
        jPanel49 = new javax.swing.JPanel();
        jlStartingSeasonMonth = new javax.swing.JLabel();
        moIntStartingSeasonMonth = new sa.lib.gui.bean.SBeanFieldInteger();
        jPanel19 = new javax.swing.JPanel();
        jlItemType = new javax.swing.JLabel();
        moKeyItemType = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel44 = new javax.swing.JPanel();
        jlInputCategory = new javax.swing.JLabel();
        moKeyInputCategory = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel31 = new javax.swing.JPanel();
        jlInputClass = new javax.swing.JLabel();
        moKeyInputClass = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel32 = new javax.swing.JPanel();
        jlInputType = new javax.swing.JLabel();
        moKeyInputType = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel40 = new javax.swing.JPanel();
        jlItemProductSource_1_n = new javax.swing.JLabel();
        moKeyItemProductSource_1_n = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel41 = new javax.swing.JPanel();
        jlItemProductSource_2_n = new javax.swing.JLabel();
        moKeyItemProductSource_2_n = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel24 = new javax.swing.JPanel();
        jlItemRowMaterial_n = new javax.swing.JLabel();
        moKeyItemRowMaterial_n = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel25 = new javax.swing.JPanel();
        jlItemByproduct_n = new javax.swing.JLabel();
        moKeyItemByproduct_n = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel26 = new javax.swing.JPanel();
        jlItemCull_n = new javax.swing.JLabel();
        moKeyItemCull_n = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel14 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jlMfgFinishedGoodPercentage = new javax.swing.JLabel();
        jlMfgByproductPercentage = new javax.swing.JLabel();
        jlMfgWastePercentage = new javax.swing.JLabel();
        jlMfgTotalPercentage = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        moDecMfgFinishedGoodPercentage = new sa.lib.gui.bean.SBeanFieldDecimal();
        moDecMfgByproductPercentage = new sa.lib.gui.bean.SBeanFieldDecimal();
        moDecMfgWastePercentage = new sa.lib.gui.bean.SBeanFieldDecimal();
        moDecMfgTotalPercentage = new sa.lib.gui.bean.SBeanFieldDecimal();
        jPanel8 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel50 = new javax.swing.JPanel();
        jlBranch = new javax.swing.JLabel();
        moKeyBranch = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel27 = new javax.swing.JPanel();
        jlWarehouse = new javax.swing.JLabel();
        moKeyWarehouse = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel11 = new javax.swing.JPanel();
        jlExternalWarehouse_n = new javax.swing.JLabel();
        moKeyExternalWarehouse_n = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel30 = new javax.swing.JPanel();
        moBoolLaboratory = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel20 = new javax.swing.JPanel();
        moBoolImpuritiesPercentage = new sa.lib.gui.bean.SBeanFieldBoolean();
        moBoolOleicAcidPercentage = new sa.lib.gui.bean.SBeanFieldBoolean();
        moBoolFruit = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel35 = new javax.swing.JPanel();
        moBoolMoisturePercentage = new sa.lib.gui.bean.SBeanFieldBoolean();
        moBoolLinoleicAcidPercentage = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel36 = new javax.swing.JPanel();
        moBoolDensity = new sa.lib.gui.bean.SBeanFieldBoolean();
        moBoolLinolenicAcidPercentage = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel37 = new javax.swing.JPanel();
        moBoolRefractionIndex = new sa.lib.gui.bean.SBeanFieldBoolean();
        moBoolErucicAcidPercentage = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel39 = new javax.swing.JPanel();
        moBoolIodineValue = new sa.lib.gui.bean.SBeanFieldBoolean();
        moBoolProteinPercentage = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel48 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        moBoolOilContentPercentage = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel51 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        moBoolAcidityPercentage = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel45 = new javax.swing.JPanel();
        moBoolPackage = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel22 = new javax.swing.JPanel();
        jlPackageWeight = new javax.swing.JLabel();
        moDecPackageWeight = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlPackageWeightUnit = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jlPackageName = new javax.swing.JLabel();
        moTextPackageName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel33 = new javax.swing.JPanel();
        moBoolAutoMailNotification = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel34 = new javax.swing.JPanel();
        jlAutoMailNotificationBoxes = new javax.swing.JLabel();
        moTextAutoMailNotificationBoxes = new sa.lib.gui.bean.SBeanFieldText();
        jLabel1 = new javax.swing.JLabel();
        jPanel46 = new javax.swing.JPanel();
        moBoolUserMailNotification = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel47 = new javax.swing.JPanel();
        jlUserMailNotificationBoxes = new javax.swing.JLabel();
        moTextUserMailNotificationBoxes = new sa.lib.gui.bean.SBeanFieldText();
        jLabel2 = new javax.swing.JLabel();
        jPanel38 = new javax.swing.JPanel();
        moBoolUserMailNotificationOnlyWhenMoves = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel23 = new javax.swing.JPanel();
        jlRevueltaItemId = new javax.swing.JLabel();
        moTextRevueltaItemId = new sa.lib.gui.bean.SBeanFieldText();
        jLabel8 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        moBoolPrintInputType = new sa.lib.gui.bean.SBeanFieldBoolean();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(21, 1, 0, 5));

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlExternalItem.setForeground(new java.awt.Color(0, 0, 255));
        jlExternalItem.setText("Ítem sist. externo:*");
        jlExternalItem.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel10.add(jlExternalItem);

        moKeyExternalItem.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel10.add(moKeyExternalItem);

        jPanel2.add(jPanel10);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlExternalCode.setText("Código sist. externo:*");
        jlExternalCode.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel6.add(jlExternalCode);

        moTextExternalCode.setEditable(false);
        moTextExternalCode.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel6.add(moTextExternalCode);

        jPanel2.add(jPanel6);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlExternalName.setText("Nombre sist. externo:*");
        jlExternalName.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel3.add(jlExternalName);

        moTextExternalName.setEditable(false);
        moTextExternalName.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel3.add(moTextExternalName);

        jPanel2.add(jPanel3);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel12.add(jlCode);

        moTextCode.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel12.add(moTextCode);

        jPanel2.add(jPanel12);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel13.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel13.add(moTextName);

        jPanel2.add(jPanel13);

        jPanel43.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlNameShort.setText("Nombre corto:");
        jlNameShort.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel43.add(jlNameShort);

        moTextNameShort.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel43.add(moTextNameShort);

        jLabel7.setForeground(java.awt.Color.gray);
        jLabel7.setText("para notificaciones mail");
        jLabel7.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel43.add(jLabel7);

        jPanel2.add(jPanel43);

        jPanel29.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUnit.setText("Unidad:*");
        jlUnit.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel29.add(jlUnit);

        moKeyUnit.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel29.add(moKeyUnit);

        jPanel2.add(jPanel29);

        jPanel28.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUnitaryWeight.setText("Peso unitario:*");
        jlUnitaryWeight.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel28.add(jlUnitaryWeight);
        jPanel28.add(moDecUnitaryWeight);

        jlUnitaryWeightUnit.setText("UNIT");
        jlUnitaryWeightUnit.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel28.add(jlUnitaryWeightUnit);

        jPanel2.add(jPanel28);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDensity.setText("Densidad:*");
        jlDensity.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel9.add(jlDensity);
        jPanel9.add(moDecDensity);

        jlDensityUnit.setText("UNIT");
        jlDensityUnit.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jlDensityUnit);

        jPanel2.add(jPanel9);

        jPanel49.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlStartingSeasonMonth.setText("Mes inicia temporada:");
        jlStartingSeasonMonth.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel49.add(jlStartingSeasonMonth);
        jPanel49.add(moIntStartingSeasonMonth);

        jPanel2.add(jPanel49);

        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItemType.setText("Tipo ítem:*");
        jlItemType.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel19.add(jlItemType);

        moKeyItemType.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel19.add(moKeyItemType);

        jPanel2.add(jPanel19);

        jPanel44.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlInputCategory.setText("Categoría insumo:*");
        jlInputCategory.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel44.add(jlInputCategory);

        moKeyInputCategory.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel44.add(moKeyInputCategory);

        jPanel2.add(jPanel44);

        jPanel31.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlInputClass.setText("Clase insumo:*");
        jlInputClass.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel31.add(jlInputClass);

        moKeyInputClass.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel31.add(moKeyInputClass);

        jPanel2.add(jPanel31);

        jPanel32.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlInputType.setText("Tipo insumo:*");
        jlInputType.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel32.add(jlInputType);

        moKeyInputType.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel32.add(moKeyInputType);

        jPanel2.add(jPanel32);

        jPanel40.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItemProductSource_1_n.setText("Producto origen 1:");
        jlItemProductSource_1_n.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel40.add(jlItemProductSource_1_n);

        moKeyItemProductSource_1_n.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel40.add(moKeyItemProductSource_1_n);

        jPanel2.add(jPanel40);

        jPanel41.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItemProductSource_2_n.setText("Producto origen 2:");
        jlItemProductSource_2_n.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel41.add(jlItemProductSource_2_n);

        moKeyItemProductSource_2_n.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel41.add(moKeyItemProductSource_2_n);

        jPanel2.add(jPanel41);

        jPanel24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItemRowMaterial_n.setText("Materia prima:*");
        jlItemRowMaterial_n.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel24.add(jlItemRowMaterial_n);

        moKeyItemRowMaterial_n.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel24.add(moKeyItemRowMaterial_n);

        jPanel2.add(jPanel24);

        jPanel25.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItemByproduct_n.setText("Subproducto:");
        jlItemByproduct_n.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel25.add(jlItemByproduct_n);

        moKeyItemByproduct_n.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel25.add(moKeyItemByproduct_n);

        jPanel2.add(jPanel25);

        jPanel26.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItemCull_n.setText("Desecho:");
        jlItemCull_n.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel26.add(jlItemCull_n);

        moKeyItemCull_n.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel26.add(moKeyItemCull_n);

        jPanel2.add(jPanel26);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel5.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel14.add(jLabel5);

        jlMfgFinishedGoodPercentage.setText("Producto:*");
        jlMfgFinishedGoodPercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel14.add(jlMfgFinishedGoodPercentage);

        jlMfgByproductPercentage.setText("Subproducto:");
        jlMfgByproductPercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel14.add(jlMfgByproductPercentage);

        jlMfgWastePercentage.setText("Desecho:");
        jlMfgWastePercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel14.add(jlMfgWastePercentage);

        jlMfgTotalPercentage.setText("Total:");
        jlMfgTotalPercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel14.add(jlMfgTotalPercentage);

        jPanel2.add(jPanel14);

        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel6.setText("Composición producto:");
        jLabel6.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel15.add(jLabel6);

        moDecMfgFinishedGoodPercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        moDecMfgFinishedGoodPercentage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                moDecMfgFinishedGoodPercentageFocusLost(evt);
            }
        });
        jPanel15.add(moDecMfgFinishedGoodPercentage);

        moDecMfgByproductPercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        moDecMfgByproductPercentage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                moDecMfgByproductPercentageFocusLost(evt);
            }
        });
        jPanel15.add(moDecMfgByproductPercentage);

        moDecMfgWastePercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        moDecMfgWastePercentage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                moDecMfgWastePercentageFocusLost(evt);
            }
        });
        jPanel15.add(moDecMfgWastePercentage);

        moDecMfgTotalPercentage.setEditable(false);
        moDecMfgTotalPercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel15.add(moDecMfgTotalPercentage);

        jPanel2.add(jPanel15);

        jPanel7.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel5.add(jPanel7, java.awt.BorderLayout.WEST);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel18.setLayout(new java.awt.GridLayout(21, 1, 0, 5));

        jPanel50.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBranch.setText("Sucursal:*");
        jlBranch.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel50.add(jlBranch);

        moKeyBranch.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel50.add(moKeyBranch);

        jPanel18.add(jPanel50);

        jPanel27.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlWarehouse.setText("Almacén:*");
        jlWarehouse.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel27.add(jlWarehouse);

        moKeyWarehouse.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel27.add(moKeyWarehouse);

        jPanel18.add(jPanel27);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlExternalWarehouse_n.setText("Almacén sist. externo:*");
        jlExternalWarehouse_n.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel11.add(jlExternalWarehouse_n);

        moKeyExternalWarehouse_n.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel11.add(moKeyExternalWarehouse_n);

        jPanel18.add(jPanel11);

        jPanel30.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolLaboratory.setText("Aplica análisis de laboratorio");
        moBoolLaboratory.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel30.add(moBoolLaboratory);

        jPanel18.add(jPanel30);

        jPanel20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolImpuritiesPercentage.setText("Aplica impurezas (%)");
        moBoolImpuritiesPercentage.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel20.add(moBoolImpuritiesPercentage);

        moBoolOleicAcidPercentage.setText("Aplica ácido oleico (%)");
        moBoolOleicAcidPercentage.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel20.add(moBoolOleicAcidPercentage);

        moBoolFruit.setText("Aplican parámetros fruta");
        moBoolFruit.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel20.add(moBoolFruit);

        jPanel18.add(jPanel20);

        jPanel35.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolMoisturePercentage.setText("Aplica humedad (%)");
        moBoolMoisturePercentage.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel35.add(moBoolMoisturePercentage);

        moBoolLinoleicAcidPercentage.setText("Aplica ácido linoleico (%)");
        moBoolLinoleicAcidPercentage.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel35.add(moBoolLinoleicAcidPercentage);

        jPanel18.add(jPanel35);

        jPanel36.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolDensity.setText("Aplica densidad");
        moBoolDensity.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel36.add(moBoolDensity);

        moBoolLinolenicAcidPercentage.setText("Aplica ácido linolénico (%)");
        moBoolLinolenicAcidPercentage.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel36.add(moBoolLinolenicAcidPercentage);

        jPanel18.add(jPanel36);

        jPanel37.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolRefractionIndex.setText("Aplica índice refracción (IR)");
        moBoolRefractionIndex.setPreferredSize(new java.awt.Dimension(175, 23));
        moBoolRefractionIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moBoolRefractionIndexActionPerformed(evt);
            }
        });
        jPanel37.add(moBoolRefractionIndex);

        moBoolErucicAcidPercentage.setText("Aplica ácido erúcico (%)");
        moBoolErucicAcidPercentage.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel37.add(moBoolErucicAcidPercentage);

        jPanel18.add(jPanel37);

        jPanel39.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolIodineValue.setText("Aplica valor yodo (VI)");
        moBoolIodineValue.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel39.add(moBoolIodineValue);

        moBoolProteinPercentage.setText("Aplica proteína (%)");
        moBoolProteinPercentage.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel39.add(moBoolProteinPercentage);

        jPanel18.add(jPanel39);

        jPanel48.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel3.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel48.add(jLabel3);

        moBoolOilContentPercentage.setText("Aplica aceite (%)");
        moBoolOilContentPercentage.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel48.add(moBoolOilContentPercentage);

        jPanel18.add(jPanel48);

        jPanel51.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel4.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel51.add(jLabel4);

        moBoolAcidityPercentage.setText("Aplica acidez (%)");
        moBoolAcidityPercentage.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel51.add(moBoolAcidityPercentage);

        jPanel18.add(jPanel51);

        jPanel45.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolPackage.setText("Aplica empaque");
        moBoolPackage.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel45.add(moBoolPackage);

        jPanel18.add(jPanel45);

        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPackageWeight.setText("Peso empaque:*");
        jlPackageWeight.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel22.add(jlPackageWeight);
        jPanel22.add(moDecPackageWeight);

        jlPackageWeightUnit.setText("UNIT");
        jlPackageWeightUnit.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel22.add(jlPackageWeightUnit);

        jPanel18.add(jPanel22);

        jPanel21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPackageName.setText("Empaque:*");
        jlPackageName.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel21.add(jlPackageName);

        moTextPackageName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel21.add(moTextPackageName);

        jPanel18.add(jPanel21);

        jPanel33.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolAutoMailNotification.setText("Aplica envío automático de mail");
        moBoolAutoMailNotification.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel33.add(moBoolAutoMailNotification);

        jPanel18.add(jPanel33);

        jPanel34.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlAutoMailNotificationBoxes.setText("Destinatario(s) mail:");
        jlAutoMailNotificationBoxes.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel34.add(jlAutoMailNotificationBoxes);

        moTextAutoMailNotificationBoxes.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel34.add(moTextAutoMailNotificationBoxes);

        jLabel1.setForeground(java.awt.Color.gray);
        jLabel1.setText("separar con ';'");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel34.add(jLabel1);

        jPanel18.add(jPanel34);

        jPanel46.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolUserMailNotification.setText("Aplica envío manual de mail");
        moBoolUserMailNotification.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel46.add(moBoolUserMailNotification);

        jPanel18.add(jPanel46);

        jPanel47.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUserMailNotificationBoxes.setText("Destinatario(s) mail:");
        jlUserMailNotificationBoxes.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel47.add(jlUserMailNotificationBoxes);

        moTextUserMailNotificationBoxes.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel47.add(moTextUserMailNotificationBoxes);

        jLabel2.setForeground(java.awt.Color.gray);
        jLabel2.setText("separar con ';'");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel47.add(jLabel2);

        jPanel18.add(jPanel47);

        jPanel38.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolUserMailNotificationOnlyWhenMoves.setText("Aplica envío de mail sólo si hay movimientos en el período");
        moBoolUserMailNotificationOnlyWhenMoves.setPreferredSize(new java.awt.Dimension(350, 23));
        jPanel38.add(moBoolUserMailNotificationOnlyWhenMoves);

        jPanel18.add(jPanel38);

        jPanel23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlRevueltaItemId.setText("Clave Revuelta:");
        jlRevueltaItemId.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel23.add(jlRevueltaItemId);
        jPanel23.add(moTextRevueltaItemId);

        jLabel8.setForeground(java.awt.Color.gray);
        jLabel8.setText("clave ítem en BD Revuelta");
        jLabel8.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel23.add(jLabel8);

        jPanel18.add(jPanel23);

        jPanel42.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolPrintInputType.setText("Mostrar tipo insumo en impresión boleto");
        moBoolPrintInputType.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel42.add(moBoolPrintInputType);

        jPanel18.add(jPanel42);

        jPanel8.add(jPanel18, java.awt.BorderLayout.NORTH);

        jPanel5.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel5, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void moBoolRefractionIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moBoolRefractionIndexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moBoolRefractionIndexActionPerformed

    private void moDecMfgFinishedGoodPercentageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moDecMfgFinishedGoodPercentageFocusLost
        totalPercentage();
    }//GEN-LAST:event_moDecMfgFinishedGoodPercentageFocusLost

    private void moDecMfgByproductPercentageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moDecMfgByproductPercentageFocusLost
        totalPercentage();
    }//GEN-LAST:event_moDecMfgByproductPercentageFocusLost

    private void moDecMfgWastePercentageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moDecMfgWastePercentageFocusLost
        totalPercentage();
    }//GEN-LAST:event_moDecMfgWastePercentageFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jlAutoMailNotificationBoxes;
    private javax.swing.JLabel jlBranch;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlDensity;
    private javax.swing.JLabel jlDensityUnit;
    private javax.swing.JLabel jlExternalCode;
    private javax.swing.JLabel jlExternalItem;
    private javax.swing.JLabel jlExternalName;
    private javax.swing.JLabel jlExternalWarehouse_n;
    private javax.swing.JLabel jlInputCategory;
    private javax.swing.JLabel jlInputClass;
    private javax.swing.JLabel jlInputType;
    private javax.swing.JLabel jlItemByproduct_n;
    private javax.swing.JLabel jlItemCull_n;
    private javax.swing.JLabel jlItemProductSource_1_n;
    private javax.swing.JLabel jlItemProductSource_2_n;
    private javax.swing.JLabel jlItemRowMaterial_n;
    private javax.swing.JLabel jlItemType;
    private javax.swing.JLabel jlMfgByproductPercentage;
    private javax.swing.JLabel jlMfgFinishedGoodPercentage;
    private javax.swing.JLabel jlMfgTotalPercentage;
    private javax.swing.JLabel jlMfgWastePercentage;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlNameShort;
    private javax.swing.JLabel jlPackageName;
    private javax.swing.JLabel jlPackageWeight;
    private javax.swing.JLabel jlPackageWeightUnit;
    private javax.swing.JLabel jlRevueltaItemId;
    private javax.swing.JLabel jlStartingSeasonMonth;
    private javax.swing.JLabel jlUnit;
    private javax.swing.JLabel jlUnitaryWeight;
    private javax.swing.JLabel jlUnitaryWeightUnit;
    private javax.swing.JLabel jlUserMailNotificationBoxes;
    private javax.swing.JLabel jlWarehouse;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolAcidityPercentage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolAutoMailNotification;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolDensity;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolErucicAcidPercentage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolFruit;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolImpuritiesPercentage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolIodineValue;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolLaboratory;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolLinoleicAcidPercentage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolLinolenicAcidPercentage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolMoisturePercentage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolOilContentPercentage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolOleicAcidPercentage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolPackage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolPrintInputType;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolProteinPercentage;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolRefractionIndex;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolUserMailNotification;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolUserMailNotificationOnlyWhenMoves;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecDensity;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecMfgByproductPercentage;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecMfgFinishedGoodPercentage;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecMfgTotalPercentage;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecMfgWastePercentage;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecPackageWeight;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecUnitaryWeight;
    private sa.lib.gui.bean.SBeanFieldInteger moIntStartingSeasonMonth;
    private sa.lib.gui.bean.SBeanFieldKey moKeyBranch;
    private sa.lib.gui.bean.SBeanFieldKey moKeyExternalItem;
    private sa.lib.gui.bean.SBeanFieldKey moKeyExternalWarehouse_n;
    private sa.lib.gui.bean.SBeanFieldKey moKeyInputCategory;
    private sa.lib.gui.bean.SBeanFieldKey moKeyInputClass;
    private sa.lib.gui.bean.SBeanFieldKey moKeyInputType;
    private sa.lib.gui.bean.SBeanFieldKey moKeyItemByproduct_n;
    private sa.lib.gui.bean.SBeanFieldKey moKeyItemCull_n;
    private sa.lib.gui.bean.SBeanFieldKey moKeyItemProductSource_1_n;
    private sa.lib.gui.bean.SBeanFieldKey moKeyItemProductSource_2_n;
    private sa.lib.gui.bean.SBeanFieldKey moKeyItemRowMaterial_n;
    private sa.lib.gui.bean.SBeanFieldKey moKeyItemType;
    private sa.lib.gui.bean.SBeanFieldKey moKeyUnit;
    private sa.lib.gui.bean.SBeanFieldKey moKeyWarehouse;
    private sa.lib.gui.bean.SBeanFieldText moTextAutoMailNotificationBoxes;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextExternalCode;
    private sa.lib.gui.bean.SBeanFieldText moTextExternalName;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    private sa.lib.gui.bean.SBeanFieldText moTextNameShort;
    private sa.lib.gui.bean.SBeanFieldText moTextPackageName;
    private sa.lib.gui.bean.SBeanFieldText moTextRevueltaItemId;
    private sa.lib.gui.bean.SBeanFieldText moTextUserMailNotificationBoxes;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 1024, 680);

        msAutoMailNotificationBoxes = new ArrayList<String>();
        msUserMailNotificationBoxes = new ArrayList<String>();

        moFieldKeyGroup = new SGuiFieldKeyGroup(miClient);

        moKeyExternalItem.setKeySettings(miClient, SGuiUtils.getLabelName(jlExternalItem), true);
        moTextExternalCode.setTextSettings(SGuiUtils.getLabelName(jlExternalCode), 35);
        moTextExternalName.setTextSettings(SGuiUtils.getLabelName(jlExternalName), 255);
        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode), 25);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName), 150);
        moTextNameShort.setTextSettings(SGuiUtils.getLabelName(jlNameShort), 50, 0);
        moKeyUnit.setKeySettings(miClient, SGuiUtils.getLabelName(jlUnit), true);
        moDecUnitaryWeight.setDecimalSettings(SGuiUtils.getLabelName(jlUnitaryWeight), SGuiConsts.GUI_TYPE_DEC_QTY, true);
        moDecDensity.setDecimalSettings(SGuiUtils.getLabelName(jlDensity), SGuiConsts.GUI_TYPE_DEC_QTY, true);
        moIntStartingSeasonMonth.setIntegerSettings(SGuiUtils.getLabelName(jlStartingSeasonMonth), SGuiConsts.GUI_TYPE_INT_CAL_MONTH, false);

        moKeyItemType.setKeySettings(miClient, SGuiUtils.getLabelName(jlItemType), true);
        moKeyInputCategory.setKeySettings(miClient, SGuiUtils.getLabelName(jlInputCategory), true);
        moKeyInputClass.setKeySettings(miClient, SGuiUtils.getLabelName(jlInputClass), true);
        moKeyInputType.setKeySettings(miClient, SGuiUtils.getLabelName(jlInputType), true);
        moKeyItemRowMaterial_n.setKeySettings(miClient, SGuiUtils.getLabelName(jlItemRowMaterial_n), true);
        moKeyItemProductSource_1_n.setKeySettings(miClient, SGuiUtils.getLabelName(jlItemProductSource_1_n), false);
        moKeyItemProductSource_2_n.setKeySettings(miClient, SGuiUtils.getLabelName(jlItemProductSource_2_n), false);
        moKeyItemByproduct_n.setKeySettings(miClient, SGuiUtils.getLabelName(jlItemByproduct_n), false);
        moKeyItemCull_n.setKeySettings(miClient, SGuiUtils.getLabelName(jlItemCull_n), false);
        moDecMfgFinishedGoodPercentage.setDecimalSettings(SGuiUtils.getLabelName(jlMfgFinishedGoodPercentage), SGuiConsts.GUI_TYPE_DEC_PER_DISC, true);
        moDecMfgByproductPercentage.setDecimalSettings(SGuiUtils.getLabelName(jlMfgByproductPercentage), SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecMfgWastePercentage.setDecimalSettings(SGuiUtils.getLabelName(jlMfgWastePercentage), SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecMfgTotalPercentage.setDecimalSettings(SGuiUtils.getLabelName(jlMfgWastePercentage), SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moKeyBranch.setKeySettings(miClient, SGuiUtils.getLabelName(jlBranch), false);
        moKeyWarehouse.setKeySettings(miClient, SGuiUtils.getLabelName(jlWarehouse), true);
        moKeyExternalWarehouse_n.setKeySettings(miClient, SGuiUtils.getLabelName(jlExternalWarehouse_n), true);
        moBoolLaboratory.setBooleanSettings(SGuiUtils.getLabelName(moBoolLaboratory.getText()), false);
        moBoolImpuritiesPercentage.setBooleanSettings(SGuiUtils.getLabelName(moBoolImpuritiesPercentage.getText()), false);
        moBoolMoisturePercentage.setBooleanSettings(SGuiUtils.getLabelName(moBoolMoisturePercentage.getText()), false);
        moBoolDensity.setBooleanSettings(SGuiUtils.getLabelName(moBoolDensity.getText()), false);
        moBoolRefractionIndex.setBooleanSettings(SGuiUtils.getLabelName(moBoolRefractionIndex.getText()), false);
        moBoolIodineValue.setBooleanSettings(SGuiUtils.getLabelName(moBoolIodineValue.getText()), false);
        moBoolOleicAcidPercentage.setBooleanSettings(SGuiUtils.getLabelName(moBoolOleicAcidPercentage.getText()), false);
        moBoolLinoleicAcidPercentage.setBooleanSettings(SGuiUtils.getLabelName(moBoolLinoleicAcidPercentage.getText()), false);
        moBoolLinolenicAcidPercentage.setBooleanSettings(SGuiUtils.getLabelName(moBoolLinolenicAcidPercentage.getText()), false);
        moBoolErucicAcidPercentage.setBooleanSettings(SGuiUtils.getLabelName(moBoolErucicAcidPercentage.getText()), false);
        moBoolProteinPercentage.setBooleanSettings(SGuiUtils.getLabelName(moBoolProteinPercentage.getText()), false);
        moBoolOilContentPercentage.setBooleanSettings(SGuiUtils.getLabelName(moBoolOilContentPercentage.getText()), false);
        moBoolAcidityPercentage.setBooleanSettings(SGuiUtils.getLabelName(moBoolAcidityPercentage.getText()), false);
        moBoolFruit.setBooleanSettings(SGuiUtils.getLabelName(moBoolFruit.getText()), false);
        moBoolPackage.setBooleanSettings(SGuiUtils.getLabelName(moBoolPackage.getText()), false);
        moDecPackageWeight.setDecimalSettings(SGuiUtils.getLabelName(jlPackageWeight), SGuiConsts.GUI_TYPE_DEC_QTY, true);
        moTextPackageName.setTextSettings(SGuiUtils.getLabelName(jlPackageName), 35);
        moBoolAutoMailNotification.setBooleanSettings(SGuiUtils.getLabelName(moBoolAutoMailNotification.getText()), false);
        moTextAutoMailNotificationBoxes.setTextSettings(SGuiUtils.getLabelName(jlAutoMailNotificationBoxes), 255);
        moTextAutoMailNotificationBoxes.setTextCaseType(SGuiConsts.TEXT_CASE_LOWER);
        moTextAutoMailNotificationBoxes.setMinLength(0);
        moBoolUserMailNotification.setBooleanSettings(SGuiUtils.getLabelName(moBoolAutoMailNotification.getText()), false);
        moTextUserMailNotificationBoxes.setTextSettings(SGuiUtils.getLabelName(jlUserMailNotificationBoxes), 255);
        moTextUserMailNotificationBoxes.setTextCaseType(SGuiConsts.TEXT_CASE_LOWER);
        moTextUserMailNotificationBoxes.setMinLength(0);
        moBoolUserMailNotificationOnlyWhenMoves.setBooleanSettings(SGuiUtils.getLabelName(moBoolAutoMailNotification.getText()), false);
        moTextRevueltaItemId.setTextSettings(SGuiUtils.getLabelName(jlRevueltaItemId), 4, 0);
        moBoolPrintInputType.setBooleanSettings(SGuiUtils.getLabelName(moBoolPrintInputType.getText()), false);

        moFields.addField(moKeyExternalItem);
        moFields.addField(moTextExternalCode);
        moFields.addField(moTextExternalName);
        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moTextNameShort);
        moFields.addField(moKeyUnit);
        moFields.addField(moDecUnitaryWeight);
        moFields.addField(moDecDensity);
        moFields.addField(moIntStartingSeasonMonth);
        moFields.addField(moKeyItemType);
        moFields.addField(moKeyInputCategory);
        moFields.addField(moKeyInputClass);
        moFields.addField(moKeyInputType);
        moFields.addField(moKeyItemProductSource_1_n);
        moFields.addField(moKeyItemProductSource_2_n);
        moFields.addField(moKeyItemRowMaterial_n);
        moFields.addField(moKeyItemByproduct_n);
        moFields.addField(moKeyItemCull_n);
        moFields.addField(moDecMfgFinishedGoodPercentage);
        moFields.addField(moDecMfgByproductPercentage);
        moFields.addField(moDecMfgWastePercentage);
        moFields.addField(moDecMfgTotalPercentage);
        moFields.addField(moKeyBranch);
        moFields.addField(moKeyWarehouse);
        moFields.addField(moKeyExternalWarehouse_n);
        moFields.addField(moBoolLaboratory);
        moFields.addField(moBoolImpuritiesPercentage);
        moFields.addField(moBoolMoisturePercentage);
        moFields.addField(moBoolDensity);
        moFields.addField(moBoolRefractionIndex);
        moFields.addField(moBoolIodineValue);
        moFields.addField(moBoolOleicAcidPercentage);
        moFields.addField(moBoolLinoleicAcidPercentage);
        moFields.addField(moBoolLinolenicAcidPercentage);
        moFields.addField(moBoolErucicAcidPercentage);
        moFields.addField(moBoolProteinPercentage);
        moFields.addField(moBoolOilContentPercentage);
        moFields.addField(moBoolAcidityPercentage);
        moFields.addField(moBoolFruit);
        moFields.addField(moBoolPackage);
        moFields.addField(moDecPackageWeight);
        moFields.addField(moTextPackageName);
        moFields.addField(moBoolAutoMailNotification);
        moFields.addField(moTextAutoMailNotificationBoxes);
        moFields.addField(moBoolUserMailNotification);
        moFields.addField(moTextUserMailNotificationBoxes);
        moFields.addField(moBoolUserMailNotificationOnlyWhenMoves);
        moFields.addField(moTextRevueltaItemId);
        moFields.addField(moBoolPrintInputType);

        moFields.setFormButton(jbSave);
        
        jlUnitaryWeightUnit.setText(SSomConsts.KG);
        jlPackageWeightUnit.setText(SSomConsts.KG);
        jlDensityUnit.setText(SSomConsts.DEN);
    }

    private void totalPercentage() {
        moDecMfgTotalPercentage.setValue(moDecMfgFinishedGoodPercentage.getValue() + moDecMfgByproductPercentage.getValue() + moDecMfgWastePercentage.getValue());
    }

    private void itemStateKeyExternalItem() {
        if (moKeyExternalItem.getSelectedIndex() <= 0) {
            moTextCode.setValue("");
            moTextName.setValue("");
            moTextExternalCode.setValue("");
            moTextExternalName.setValue("");
            moKeyUnit.setValue(new int[] { SLibConsts.UNDEFINED });
        }
        else {
            try {
                moTextCode.setValue(moKeyExternalItem.getSelectedItem().getCode());
                moTextName.setValue(moKeyExternalItem.getSelectedItem().getItem());
                moTextExternalCode.setValue(moKeyExternalItem.getSelectedItem().getCode());
                moTextExternalName.setValue(moKeyExternalItem.getSelectedItem().getItem());
                moKeyUnit.setValue(new int[] { SSomUtils.getUnitId(miClient.getSession(), (int) moKeyExternalItem.getSelectedItem().getComplement()) });
            }
            catch (Exception e) {
                SLibUtils.showException(this, e);
            }
        }
    }

    private void itemStateKeyItemTypeId() {
        if (moKeyItemType.getSelectedIndex() <= 0) {
            moDecMfgFinishedGoodPercentage.setEditable(false);
            moDecMfgByproductPercentage.setEditable(false);
            moDecMfgWastePercentage.setEditable(false);
            moKeyInputCategory.setEnabled(false);
            moKeyInputClass.setEnabled(false);
            moKeyInputType.setEnabled(false);
            moKeyItemRowMaterial_n.setEnabled(false);
            moKeyItemProductSource_1_n.setEnabled(false);
            moKeyItemProductSource_2_n.setEnabled(false);
            moKeyItemByproduct_n.setEnabled(false);
            moKeyItemCull_n.setEnabled(false);
            moKeyWarehouse.setEnabled(false);
        }
        else {
            if (moKeyItemType.getValue()[0] != SModSysConsts.SS_ITEM_TP_RM) {
                moKeyInputCategory.setEnabled(false);
                moKeyInputClass.setEnabled(false);
                moKeyInputType.setEnabled(false);
                moDecMfgFinishedGoodPercentage.setEditable(false);
                moDecMfgByproductPercentage.setEditable(false);
                moDecMfgWastePercentage.setEditable(false);
            }
            else {
                moKeyInputCategory.setEnabled(true);
                moKeyInputClass.setEnabled(true);
                moKeyInputType.setEnabled(true);
                moDecMfgFinishedGoodPercentage.setEditable(true);
                moDecMfgByproductPercentage.setEditable(true);
                moDecMfgWastePercentage.setEditable(true);
            }

            if (moKeyItemType.getValue()[0] != SModSysConsts.SS_ITEM_TP_FG) {
                moKeyItemRowMaterial_n.setEnabled(false);
                moKeyItemProductSource_1_n.setEnabled(false);
                moKeyItemProductSource_2_n.setEnabled(false);
                moKeyItemByproduct_n.setEnabled(false);
                moKeyItemCull_n.setEnabled(false);
                moKeyWarehouse.setEnabled(true);
            }
            else {
                moKeyItemRowMaterial_n.setEnabled(true);
                moKeyItemProductSource_1_n.setEnabled(true);
                moKeyItemProductSource_2_n.setEnabled(true);
                moKeyItemByproduct_n.setEnabled(true);
                moKeyItemCull_n.setEnabled(true);
                moKeyWarehouse.setEnabled(false);
            }
        }
    }

    private void itemStateBoolLaboratory() {
        moBoolImpuritiesPercentage.setEnabled(moBoolLaboratory.getValue());
        moBoolDensity.setEnabled(moBoolLaboratory.getValue());
        moBoolMoisturePercentage.setEnabled(moBoolLaboratory.getValue());
        moBoolRefractionIndex.setEnabled(moBoolLaboratory.getValue());
        moBoolIodineValue.setEnabled(moBoolLaboratory.getValue());
        moBoolOleicAcidPercentage.setEnabled(moBoolLaboratory.getValue());
        moBoolLinoleicAcidPercentage.setEnabled(moBoolLaboratory.getValue());
        moBoolLinolenicAcidPercentage.setEnabled(moBoolLaboratory.getValue());
        moBoolErucicAcidPercentage.setEnabled(moBoolLaboratory.getValue());
        moBoolProteinPercentage.setEnabled(moBoolLaboratory.getValue());
        moBoolOilContentPercentage.setEnabled(moBoolLaboratory.getValue());
        moBoolAcidityPercentage.setEnabled(moBoolLaboratory.getValue());
        moBoolFruit.setEnabled(moBoolLaboratory.getValue());
    }

    private void itemStateBoolPackage() {
        moTextPackageName.setEditable(moBoolPackage.getValue());
        moDecPackageWeight.setEditable(moBoolPackage.getValue());
    }

    @Override
    public void addAllListeners() {
        moKeyExternalItem.addItemListener(this);
        moKeyItemType.addItemListener(this);
        moBoolLaboratory.addItemListener(this);
        moBoolPackage.addItemListener(this);
        moKeyUnit.addItemListener(this);
        moBoolUserMailNotificationOnlyWhenMoves.addItemListener(this);
    }

    @Override
    public void removeAllListeners() {
        moKeyExternalItem.removeItemListener(this);
        moKeyItemType.removeItemListener(this);
        moBoolLaboratory.removeItemListener(this);
        moBoolPackage.removeItemListener(this);
        moKeyUnit.removeItemListener(this);
        moBoolUserMailNotificationOnlyWhenMoves.removeItemListener(this);
    }

    @Override
    @SuppressWarnings("unchecked")
    public void reloadCatalogues() {
        moFieldKeyGroup.initGroup();
        moFieldKeyGroup.addFieldKey(moKeyInputCategory, SModConsts.SU_INP_CT, SLibConsts.UNDEFINED, null);
        moFieldKeyGroup.addFieldKey(moKeyInputClass, SModConsts.SU_INP_CL, SLibConsts.UNDEFINED, null);
        moFieldKeyGroup.addFieldKey(moKeyInputType, SModConsts.SU_INP_TP, SLibConsts.UNDEFINED, null);
        moFieldKeyGroup.populateCatalogues();

        SExtUtils.populateCataloguesItems(miClient, moKeyExternalItem);
        miClient.getSession().populateCatalogue(moKeyExternalWarehouse_n, SModConsts.SU_EXT_WAH, SLibConsts.UNDEFINED, null);
        miClient.getSession().populateCatalogue(moKeyItemType, SModConsts.SS_ITEM_TP, SLibConsts.UNDEFINED, null);
        miClient.getSession().populateCatalogue(moKeyItemRowMaterial_n, SModConsts.SU_ITEM, SModSysConsts.SS_ITEM_TP_RM, null);
        miClient.getSession().populateCatalogue(moKeyItemProductSource_1_n, SModConsts.SU_ITEM, SModSysConsts.SS_ITEM_TP_FG, null);
        miClient.getSession().populateCatalogue(moKeyItemProductSource_2_n, SModConsts.SU_ITEM, SModSysConsts.SS_ITEM_TP_FG, null);
        miClient.getSession().populateCatalogue(moKeyItemByproduct_n, SModConsts.SU_ITEM, SModSysConsts.SS_ITEM_TP_BP, null);
        miClient.getSession().populateCatalogue(moKeyItemCull_n, SModConsts.SU_ITEM, SModSysConsts.SS_ITEM_TP_CU, null);
        miClient.getSession().populateCatalogue(moKeyBranch, SModConsts.CU_COB, SLibConsts.UNDEFINED, null);
        miClient.getSession().populateCatalogue(moKeyWarehouse, SModConsts.CU_WAH, SLibConsts.UNDEFINED, new SGuiParams(((SGuiClientSessionCustom) miClient.getSession().getSessionCustom()).getCompany().getChildBranches().get(0).getPrimaryKey()));
        miClient.getSession().populateCatalogue(moKeyUnit, SModConsts.SU_UNIT, SLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbItem) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyExternalItem.setValue(new int[] { moRegistry.getFkExternalItemId_n() });
        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());
        moTextNameShort.setValue(moRegistry.getNameShort());
        moTextExternalCode.setValue(moRegistry.getExternalCode());
        moTextExternalName.setValue(moRegistry.getExternalName());
        moKeyUnit.setValue(new int[] { moRegistry.getFkUnitId() });
        moDecDensity.setValue(moRegistry.getDensity());
        moIntStartingSeasonMonth.setValue(moRegistry.getStartingSeasonMonth());
        moKeyExternalWarehouse_n.setValue(new int[] { moRegistry.getFkExternalWarehouseId() });
        moDecMfgFinishedGoodPercentage.setValue(moRegistry.getMfgFinishedGoodPercentage());
        moDecMfgByproductPercentage.setValue(moRegistry.getMfgByproductPercentage());
        moDecMfgWastePercentage.setValue(moRegistry.getMfgCullPercentage());
        moTextPackageName.setValue(moRegistry.getPackageName());
        moDecPackageWeight.setValue(moRegistry.getPackageWeight());
        moDecUnitaryWeight.setValue(moRegistry.getUnitaryWeight());
        moBoolImpuritiesPercentage.setValue(moRegistry.isImpuritiesPercentage());
        moBoolDensity.setValue(moRegistry.isDensity());
        moBoolMoisturePercentage.setValue(moRegistry.isMoisturePercentage());
        moBoolRefractionIndex.setValue(moRegistry.isRefractionIndex());
        moBoolIodineValue.setValue(moRegistry.isIodineValue());
        moBoolOleicAcidPercentage.setValue(moRegistry.isOleicAcidPercentage());
        moBoolLinoleicAcidPercentage.setValue(moRegistry.isLinoleicAcidPercentage());
        moBoolLinolenicAcidPercentage.setValue(moRegistry.isLinolenicAcidPercentage());
        moBoolErucicAcidPercentage.setValue(moRegistry.isErucicAcidPercentage());
        moBoolProteinPercentage.setValue(moRegistry.isProteinPercentage());
        moBoolOilContentPercentage.setValue(moRegistry.isOilContentPercentage());
        moBoolAcidityPercentage.setValue(moRegistry.isAcidityPercentage());
        moBoolFruit.setValue(moRegistry.isFruit());
        moBoolPackage.setValue(moRegistry.isPackage());
        moBoolLaboratory.setValue(moRegistry.isLaboratory());
        moKeyItemType.setValue(new int[] { moRegistry.getFkItemTypeId() });
        moKeyInputCategory.setValue(new int[] { moRegistry.getFkInputCategoryId() });
        moKeyInputClass.setValue(new int[] { moRegistry.getFkInputCategoryId(), moRegistry.getFkInputClassId() });
        moKeyInputType.setValue(new int[] { moRegistry.getFkInputCategoryId(), moRegistry.getFkInputClassId(), moRegistry.getFkInputTypeId() });
        moKeyItemRowMaterial_n.setValue(new int[] { moRegistry.getFkItemRowMaterialId_n() });
        moKeyItemProductSource_1_n.setValue(new int[] { moRegistry.getFkItemSource1Id_n() });
        moKeyItemProductSource_2_n.setValue(new int[] { moRegistry.getFkItemSource2Id_n() });
        moKeyItemByproduct_n.setValue(new int[] { moRegistry.getFkItemByproductId_n() });
        moKeyItemCull_n.setValue(new int[] { moRegistry.getFkItemCullId_n() });
        moKeyWarehouse.setValue(new int[] { moRegistry.getFkWarehouseCompanyId_n(), moRegistry.getFkWarehouseBranchId_n(), moRegistry.getFkWarehouseWarehouseId_n() });
        moBoolAutoMailNotification.setValue(moRegistry.isAutoMailNotification());
        moTextAutoMailNotificationBoxes.setValue(moRegistry.getAutoMailNotificationBoxes());
        moBoolUserMailNotification.setValue(moRegistry.isUserMailNotification());
        moTextUserMailNotificationBoxes.setValue(moRegistry.getUserMailNotificationBoxes());
        moBoolUserMailNotificationOnlyWhenMoves.setValue(moRegistry.isUserMailNotificationOnlyWhenMoves());
        moTextRevueltaItemId.setValue(moRegistry.getRevueltaItemId());
        moBoolPrintInputType.setValue(moRegistry.isPrintInputType());

        setFormEditable(true);

        itemStateKeyItemTypeId();
        totalPercentage();

        moTextExternalCode.setEditable(false);
        moTextExternalName.setEditable(false);
        moDecMfgTotalPercentage.setEditable(false);
        moKeyUnit.setEnabled(false);

        moKeyBranch.setValue(((SGuiClientSessionCustom) miClient.getSession().getSessionCustom()).getCompany().getChildBranches().get(0).getPrimaryKey());
        jlBranch.setEnabled(false);
        moKeyBranch.setEnabled(false);

        itemStateBoolPackage();
        itemStateBoolLaboratory();

        if (moRegistry.isRegistryNew()) {
            
        }
        else {
            moKeyExternalItem.setEnabled(false);
        }

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbItem registry =  moRegistry.clone();
        boolean isRowMaterial = moKeyItemType.getSelectedIndex() > 0 && moKeyItemType.getValue()[0] == SModSysConsts.SS_ITEM_TP_RM;
        boolean isFinishedGood = moKeyItemType.getSelectedIndex() > 0 && moKeyItemType.getValue()[0] == SModSysConsts.SS_ITEM_TP_FG;

        if (registry.isRegistryNew()) {
            registry.setFkExternalItemId_n(moKeyExternalItem.getValue()[0]);
        }

        registry.setCode(moTextCode.getValue());
        registry.setName(moTextName.getValue());
        registry.setNameShort(moTextNameShort.getValue());
        registry.setExternalCode(moTextExternalCode.getValue());
        registry.setExternalName(moTextExternalName.getValue());
        registry.setDensity(moDecDensity.getValue());
        registry.setStartingSeasonMonth(moIntStartingSeasonMonth.getValue());

        if (isRowMaterial) {
            registry.setMfgFinishedGoodPercentage(moDecMfgFinishedGoodPercentage.getValue());
            registry.setMfgByproductPercentage(moDecMfgByproductPercentage.getValue());
            registry.setMfgCullPercentage(moDecMfgWastePercentage.getValue());
        }
        else {
            registry.setMfgFinishedGoodPercentage(0d);
            registry.setMfgByproductPercentage(0d);
            registry.setMfgCullPercentage(0d);
        }

        if (moBoolPackage.getValue()) {
            registry.setPackageName(moTextPackageName.getValue());
            registry.setPackageWeight(moDecPackageWeight.getValue());
        }
        else {
            registry.setPackageName("");
            registry.setPackageWeight(0d);
        }

        registry.setUnitaryWeight(moDecUnitaryWeight.getValue());
        registry.setRevueltaItemId(moTextRevueltaItemId.getValue());
        registry.setPackage(moBoolPackage.getValue());
        registry.setLaboratory(moBoolLaboratory.getValue());

        if (moBoolLaboratory.getValue()) {
            registry.setDensity(moBoolDensity.getValue());
            registry.setIodineValue(moBoolIodineValue.getValue());
            registry.setRefractionIndex(moBoolRefractionIndex.getValue());
            registry.setImpuritiesPercentage(moBoolImpuritiesPercentage.getValue());
            registry.setMoisturePercentage(moBoolMoisturePercentage.getValue());
            registry.setProteinPercentage(moBoolProteinPercentage.getValue());
            registry.setOilContentPercentage(moBoolOilContentPercentage.getValue());
            registry.setOleicAcidPercentage(moBoolOleicAcidPercentage.getValue());
            registry.setLinoleicAcidPercentage(moBoolLinoleicAcidPercentage.getValue());
            registry.setLinolenicAcidPercentage(moBoolLinolenicAcidPercentage.getValue());
            registry.setErucicAcidPercentage(moBoolErucicAcidPercentage.getValue());
            registry.setAcidityPercentage(moBoolAcidityPercentage.getValue());
            registry.setFruit(moBoolFruit.getValue());
        }
        else {
            registry.setDensity(false);
            registry.setIodineValue(false);
            registry.setRefractionIndex(false);
            registry.setImpuritiesPercentage(false);
            registry.setMoisturePercentage(false);
            registry.setProteinPercentage(false);
            registry.setOilContentPercentage(false);
            registry.setOleicAcidPercentage(false);
            registry.setLinoleicAcidPercentage(false);
            registry.setLinolenicAcidPercentage(false);
            registry.setErucicAcidPercentage(false);
            registry.setAcidityPercentage(false);
            registry.setFruit(false);
        }

        registry.setPrintInputType(moBoolPrintInputType.getValue());
        registry.setFkItemTypeId(moKeyItemType.getValue()[0]);

        if (isRowMaterial) {
            registry.setFkInputCategoryId(moKeyInputType.getValue()[0]);
            registry.setFkInputClassId(moKeyInputType.getValue()[1]);
            registry.setFkInputTypeId(moKeyInputType.getValue()[2]);
        }
        else {
            registry.setFkInputCategoryId(SModSysConsts.SU_INP_TP_NA[0]);
            registry.setFkInputClassId(SModSysConsts.SU_INP_TP_NA[1]);
            registry.setFkInputTypeId(SModSysConsts.SU_INP_TP_NA[2]);
        }

        registry.setFkUnitId(moKeyUnit.getValue()[0]);  // this will be set on method save()
        registry.setAuxFkExternalUnitId((int) moKeyExternalItem.getSelectedItem().getComplement());

        if (isFinishedGood) {
            registry.setFkItemRowMaterialId_n(moKeyItemRowMaterial_n.getValue()[0]);
            registry.setFkItemSource1Id_n(moKeyItemProductSource_1_n.getSelectedIndex() <= 0 ? SLibConsts.UNDEFINED : moKeyItemProductSource_1_n.getValue()[0]);
            registry.setFkItemSource2Id_n(moKeyItemProductSource_2_n.getSelectedIndex() <= 0 ? SLibConsts.UNDEFINED : moKeyItemProductSource_2_n.getValue()[0]);
            registry.setFkItemByProductId_n(moKeyItemByproduct_n.getSelectedIndex() <= 0 ? SLibConsts.UNDEFINED : moKeyItemByproduct_n.getValue()[0]);
            registry.setFkItemCullId_n(moKeyItemCull_n.getSelectedIndex() <= 0 ? SLibConsts.UNDEFINED : moKeyItemCull_n.getValue()[0]);
            registry.setFkWarehouseCompanyId_n(SLibConsts.UNDEFINED);
            registry.setFkWarehouseBranchId_n(SLibConsts.UNDEFINED);
            registry.setFkWarehouseWarehouseId_n(SLibConsts.UNDEFINED);
        }
        else {
            registry.setFkItemRowMaterialId_n(SLibConsts.UNDEFINED);
            registry.setFkItemSource1Id_n(SLibConsts.UNDEFINED);
            registry.setFkItemSource2Id_n(SLibConsts.UNDEFINED);
            registry.setFkItemByProductId_n(SLibConsts.UNDEFINED);
            registry.setFkItemCullId_n(SLibConsts.UNDEFINED);
            registry.setFkWarehouseCompanyId_n(moKeyWarehouse.getValue()[0]);
            registry.setFkWarehouseBranchId_n(moKeyWarehouse.getValue()[1]);
            registry.setFkWarehouseWarehouseId_n(moKeyWarehouse.getValue()[2]);
        }

        registry.setFkExternalWarehouseId(moKeyExternalWarehouse_n.getValue()[0]);
        registry.setAutoMailNotification(moBoolAutoMailNotification.getValue());
        registry.setAutoMailNotificationBoxes(moTextAutoMailNotificationBoxes.getValue());
        registry.setUserMailNotification(moBoolUserMailNotification.getValue());
        registry.setUserMailNotificationBoxes(moTextUserMailNotificationBoxes.getValue());
        registry.setUserMailNotificationOnlyWhenMoves(moBoolUserMailNotificationOnlyWhenMoves.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        String error = "";

        if (validation.isValid()) {
            if (!moRegistry.isRegistryNew() && moKeyExternalItem.getSelectedIndex() <= 0) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlExternalItem) + "'.");
                validation.setComponent(moKeyExternalItem);
            }
            else if (moKeyUnit.getSelectedIndex() <= 0) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlUnit) + "'.");
                validation.setComponent(moKeyUnit);
            }
            else if (moKeyInputCategory.isEnabled() && SLibUtils.compareKeys(moKeyInputCategory.getValue(), new int[] { SModSysConsts.SU_INP_CT_NA })) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_DIF + "'" + SGuiUtils.getLabelName(jlInputCategory) + "'.");
                validation.setComponent(moKeyInputCategory);
            }
            else if (moKeyInputClass.isEnabled() && SLibUtils.compareKeys(moKeyInputClass.getValue(), SModSysConsts.SU_INP_CL_NA)) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_DIF + "'" + SGuiUtils.getLabelName(jlInputClass) + "'.");
                validation.setComponent(moKeyInputClass);
            }
            else if (moKeyInputType.isEnabled() && SLibUtils.compareKeys(moKeyInputType.getValue(), SModSysConsts.SU_INP_TP_NA)) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_DIF + "'" + SGuiUtils.getLabelName(jlInputType) + "'.");
                validation.setComponent(moKeyInputType);
            }
            else if (moDecMfgFinishedGoodPercentage.isEditable() && SLibUtils.round(moDecMfgFinishedGoodPercentage.getValue() + moDecMfgByproductPercentage.getValue() + moDecMfgWastePercentage.getValue(), SLibUtils.getDecimalFormatPercentageDiscount().getMaximumFractionDigits()) != 1d) {
                validation.setMessage("La suma de los campos '" + SGuiUtils.getLabelName(jlMfgFinishedGoodPercentage.getText()) + "', '" + SGuiUtils.getLabelName(jlMfgByproductPercentage.getText()) + "' y '" + SGuiUtils.getLabelName(jlMfgWastePercentage.getText()) + "' es diferente del 100%.");
                validation.setComponent(moDecMfgFinishedGoodPercentage);
            }
            else if (moKeyItemProductSource_1_n.getSelectedIndex() > 0 &&
                    moKeyItemProductSource_2_n.getSelectedIndex() > 0 &&
                    moKeyItemProductSource_1_n.getValue()[0] == moKeyItemProductSource_2_n.getValue()[0]) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_DIF + "'" + SGuiUtils.getLabelName(jlItemProductSource_2_n) + "'.");
                validation.setComponent(moKeyItemProductSource_2_n);
            }
            else if (moKeyItemProductSource_1_n.getSelectedIndex() <= 0 &&
                    moKeyItemProductSource_2_n.getSelectedIndex() > 0) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlItemProductSource_1_n) + "'.");
                validation.setComponent(moKeyItemProductSource_1_n);
            }
            else if ((moBoolAutoMailNotification.isSelected() || moBoolUserMailNotification.isSelected()) && moTextNameShort.getValue().isEmpty()) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlNameShort) + "'.");
                validation.setComponent(moTextNameShort);
            }
        }

        if (validation.isValid() && moBoolAutoMailNotification.isSelected()) {

            // Validate mail of recipients To:

            msAutoMailNotificationBoxes.clear();
            msAutoMailNotificationBoxes.addAll(Arrays.asList(SLibUtilities.textExplode(moTextAutoMailNotificationBoxes.getValue(), ";")));
            for (String box : msAutoMailNotificationBoxes) {
                error = SLibUtilities.validateEmail(box);

                if (!error.isEmpty()) {
                    validation.setMessage(error);
                    validation.setComponent(moTextAutoMailNotificationBoxes);
                    break;
                }
            }
        }

        if (validation.isValid() && moBoolUserMailNotification.isSelected()) {

            // Validate mail of recipients To:

            msUserMailNotificationBoxes.clear();
            msUserMailNotificationBoxes.addAll(Arrays.asList(SLibUtilities.textExplode(moTextUserMailNotificationBoxes.getValue(), ";")));
            for (String box : msUserMailNotificationBoxes) {
                error = SLibUtilities.validateEmail(box);

                if (!error.isEmpty()) {
                    validation.setMessage(error);
                    validation.setComponent(moTextUserMailNotificationBoxes);
                    break;
                }
            }
        }
        
        if (validation.isValid()) {
            if (moIntStartingSeasonMonth.getValue() > 12) { // 12 = december
                validation.setComponent(moIntStartingSeasonMonth);
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_VAL_ + "'" + SGuiUtils.getLabelName(jlStartingSeasonMonth.getText()) + "'" + SGuiConsts.ERR_MSG_FIELD_VAL_LESS_EQUAL + "12.");
            }
        }

        return validation;
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() instanceof JComboBox && e.getStateChange() == ItemEvent.SELECTED) {
            JComboBox comboBox = (JComboBox)  e.getSource();

            if (comboBox == moKeyExternalItem) {
                itemStateKeyExternalItem();
            }
            else if (comboBox == moKeyItemType) {
                itemStateKeyItemTypeId();
            }
        }
        else if (e.getSource() instanceof JCheckBox) {
            JCheckBox checkBox = (JCheckBox)  e.getSource();

            if (checkBox == moBoolLaboratory) {
                itemStateBoolLaboratory();
            }
            else if (checkBox == moBoolPackage) {
                itemStateBoolPackage();
            }
        }
    }
}
